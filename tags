!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACK	src/amservice.c	/^int ACK		= 0x01;$/;"	v
ADB_CHECKVERSION	inc/manager_api.h	19;"	d
ADB_CHECKVERSION	qtsrc/classes/processpthread.h	16;"	d
ADB_CHECKVERSION	qtsrc/widgets/webPage.h	40;"	d
ADB_DEVICES	inc/manager_api.h	16;"	d
ADB_DEVICES	qtsrc/classes/processpthread.h	13;"	d
ADB_DEVICES	qtsrc/widgets/webPage.h	37;"	d
ADB_INSTALL	inc/manager_api.h	14;"	d
ADB_INSTALL	qtsrc/classes/processpthread.h	11;"	d
ADB_INSTALL	qtsrc/widgets/webPage.h	35;"	d
ADB_PULL	inc/manager_api.h	18;"	d
ADB_PULL	qtsrc/classes/processpthread.h	15;"	d
ADB_PULL	qtsrc/widgets/webPage.h	39;"	d
ADB_PUSH	inc/manager_api.h	17;"	d
ADB_PUSH	qtsrc/classes/processpthread.h	14;"	d
ADB_PUSH	qtsrc/widgets/webPage.h	38;"	d
ADB_SENDMMS	inc/manager_api.h	20;"	d
ADB_SENDMMS	qtsrc/classes/processpthread.h	17;"	d
ADB_SENDMMS	qtsrc/widgets/webPage.h	41;"	d
ADB_UNINSTALL	inc/manager_api.h	15;"	d
ADB_UNINSTALL	qtsrc/classes/processpthread.h	12;"	d
ADB_UNINSTALL	qtsrc/widgets/webPage.h	36;"	d
ADD_USB	inc/pthread_api.h	8;"	d
ADD_USB	qtsrc/classes/daemon.h	13;"	d
AMEVENT_DAEMON	qtsrc/amevent.h	/^const QEvent::Type AMEVENT_DAEMON= (QEvent::Type)3003;$/;"	v
AMEVENT_EXIT	qtsrc/amevent.h	/^const QEvent::Type AMEVENT_EXIT= (QEvent::Type)3007;$/;"	v
AMEVENT_INITEVENT	qtsrc/amevent.h	/^const QEvent::Type AMEVENT_INITEVENT = (QEvent::Type)3002;$/;"	v
AMEVENT_INSTALL	qtsrc/amevent.h	/^const QEvent::Type AMEVENT_INSTALL= (QEvent::Type)3006;$/;"	v
AMEVENT_REFRESH	qtsrc/amevent.h	/^const QEvent::Type AMEVENT_REFRESH= (QEvent::Type)3009;$/;"	v
AMEVENT_SENDMMS	qtsrc/amevent.h	/^const QEvent::Type AMEVENT_SENDMMS= (QEvent::Type)3008;$/;"	v
AMEVENT_TEST	qtsrc/amevent.h	/^const QEvent::Type AMEVENT_TEST= (QEvent::Type)3004;$/;"	v
AMEVENT_UNINSTALL	qtsrc/amevent.h	/^const QEvent::Type AMEVENT_UNINSTALL= (QEvent::Type)3005;$/;"	v
AMEVENT_USBEVENT	qtsrc/amevent.h	/^const QEvent::Type AMEVENT_USBEVENT = (QEvent::Type)3001;$/;"	v
AMEvent	qtsrc/amevent.h	/^class AMEvent : public QEvent$/;"	c
AMEvent	qtsrc/backpthread.cpp	/^AMEvent::AMEvent(QEvent::Type etype,int re) :$/;"	f	class:AMEvent
ANIMATION_H	qtsrc/animation.h	42;"	d
APP	qtsrc/managewindow.h	52;"	d
APPINDEX	qtsrc/managewindow.h	/^		char APPINDEX = 0;$/;"	m	class:ManageWindow
APPMAXNU	inc/typestruct_api.h	4;"	d
APPSIGN	qtsrc/managewindow.h	/^		char APPSIGN = -1;$/;"	m	class:ManageWindow
Animation	qtsrc/animation.h	/^    Animation(QObject *target, const QByteArray &prop)$/;"	f	class:Animation
Animation	qtsrc/animation.h	/^class Animation : public QPropertyAnimation {$/;"	c
Animationinit	qtsrc/managewindow.cpp	/^void ManageWindow::Animationinit()$/;"	f	class:ManageWindow
App_clicked	qtsrc/managewindow.cpp	/^void ManageWindow::App_clicked(int x,int y)$/;"	f	class:ManageWindow
App_item	qtsrc/managewindow.h	/^		QTableWidgetItem *App_item[300][3];$/;"	m	class:ManageWindow
App_table	qtsrc/managewindow.h	/^		QTableWidget* App_table;$/;"	m	class:ManageWindow
BACKLOG	src/sampleclient.c	13;"	d	file:
BOOK	qtsrc/managewindow.h	54;"	d
BOOKMAXNU	inc/typestruct_api.h	5;"	d
BOOKSIGN	qtsrc/managewindow.h	/^		char BOOKSIGN = -1;$/;"	m	class:ManageWindow
BackQthreadInit	qtsrc/managewindow.cpp	/^void ManageWindow::BackQthreadInit()$/;"	f	class:ManageWindow
BackThread	qtsrc/managewindow.h	/^		Backthread* BackThread;$/;"	m	class:ManageWindow
Backthread	qtsrc/backpthread.cpp	/^Backthread::Backthread(QWidget* objwidget) :$/;"	f	class:Backthread
Backthread	qtsrc/backpthread.h	/^class Backthread : public QObject$/;"	c
Book_clicked	qtsrc/managewindow.cpp	/^void ManageWindow::Book_clicked(int x,int y)$/;"	f	class:ManageWindow
Book_item	qtsrc/managewindow.h	/^		QTableWidgetItem *Book_item[1000][3];$/;"	m	class:ManageWindow
Book_table	qtsrc/managewindow.h	/^		QTableWidget* Book_table;$/;"	m	class:ManageWindow
CANCEL	qtsrc/classes/downloadpthread.h	26;"	d
CHECKAPP	inc/pthread_api.h	11;"	d
CMD_APP	inc/typestruct_api.h	11;"	d
CMD_BOOK	inc/typestruct_api.h	13;"	d
CMD_CALLPHONE	inc/typestruct_api.h	16;"	d
CMD_IMAGE	inc/typestruct_api.h	8;"	d
CMD_MMS	inc/typestruct_api.h	12;"	d
CMD_MUSIC	inc/typestruct_api.h	10;"	d
CMD_SENDMMS	inc/typestruct_api.h	15;"	d
CMD_STORAGE	inc/typestruct_api.h	14;"	d
CMD_VIDEO	inc/typestruct_api.h	9;"	d
CONNECT	qtsrc/managewindow.h	45;"	d
CirclePath	qtsrc/animation.h	/^        CirclePath,$/;"	e	enum:Animation::PathType
ClassTestInit	qtsrc/managewindow.cpp	/^void ManageWindow::ClassTestInit()$/;"	f	class:ManageWindow
CmdList	qtsrc/classes/processpthread.h	/^		QStringList CmdList;$/;"	m	class:ProcessThread
ConnectThread	qtsrc/connectionthread.h	/^class ConnectThread : public QThread$/;"	c
Connecttestinit	qtsrc/classes/daemon.cpp	/^void Daemon::Connecttestinit()$/;"	f	class:Daemon
CurrentWidget	qtsrc/managewindow.cpp	/^void ManageWindow::CurrentWidget(int P_NUM)$/;"	f	class:ManageWindow
DATA_READY	inc/pthread_api.h	13;"	d
DEVICE	qtsrc/classes/daemon.h	17;"	d
DEVICE	qtsrc/classes/downloadpthread.h	19;"	d
DEVICE	qtsrc/connectionthread.h	14;"	d
DISCONNECTED	qtsrc/classes/daemon.h	16;"	d
DISCONNECTED	qtsrc/classes/downloadpthread.h	18;"	d
DISCONNECTED	qtsrc/connectionthread.h	13;"	d
DOWNLOADED	qtsrc/classes/downloadpthread.h	25;"	d
DOWNLOADING	qtsrc/classes/downloadpthread.h	24;"	d
DOWNLOADLIST	qtsrc/managewindow.h	56;"	d
DOWNLOADLIST	qtsrc/widgets/downlist.h	2;"	d
DOWNLOADMANAGER_H	qtsrc/classes/downloadmanager.h	42;"	d
DOWNLOADPTHREAD_H	qtsrc/classes/downloadpthread.h	2;"	d
DOWNLOADSIGN	qtsrc/managewindow.h	/^		char DOWNLOADSIGN = -1;$/;"	m	class:ManageWindow
Daemon	qtsrc/classes/daemon.cpp	/^Daemon::Daemon(QWidget* objwidget) :$/;"	f	class:Daemon
Daemon	qtsrc/classes/daemon.h	/^class Daemon : public QObject$/;"	c
DaemonQthreadInit	qtsrc/managewindow.cpp	/^void ManageWindow::DaemonQthreadInit()$/;"	f	class:ManageWindow
DaemonThread	qtsrc/managewindow.h	/^		Daemon* DaemonThread;$/;"	m	class:ManageWindow
DoubleClicked	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::DoubleClicked(QListWidgetItem *item)$/;"	f	class:FtpClientWindow
DownloadManager	qtsrc/classes/downloadmanager.cpp	/^DownloadManager::DownloadManager(QObject *parent)$/;"	f	class:DownloadManager
DownloadManager	qtsrc/classes/downloadmanager.h	/^class DownloadManager: public QObject$/;"	c
DownloadThread	qtsrc/classes/downloadpthread.h	/^class DownloadThread: public QThread$/;"	c
Download_clicked	qtsrc/managewindow.cpp	/^void ManageWindow::Download_clicked(int x,int y)$/;"	f	class:ManageWindow
Downloadlist	qtsrc/widgets/downlist.cpp	/^Downloadlist::Downloadlist(QWidget *parent) :$/;"	f	class:Downloadlist
Downloadlist	qtsrc/widgets/downlist.h	/^class Downloadlist: public QWidget$/;"	c
Downloadlist_item	qtsrc/managewindow.h	/^		QTableWidgetItem *Downloadlist_item[300][3];$/;"	m	class:ManageWindow
Downloadlist_table	qtsrc/managewindow.h	/^		QTableWidget* Downloadlist_table;$/;"	m	class:ManageWindow
Downloadthradinit	qtsrc/classes/daemon.cpp	/^void Daemon::Downloadthradinit()$/;"	f	class:Daemon
Downloadthradinit	qtsrc/widgets/webPage.cpp	/^void webPage::Downloadthradinit()$/;"	f	class:webPage
Downloadthread	qtsrc/widgets/webPage.h	/^class Downloadthread: public QThread$/;"	c
ERR_ACCEPT	src/sockserver.h	78;"	d
ERR_BIND	src/sockserver.h	76;"	d
ERR_CONNECT	src/sockserver.h	75;"	d
ERR_CREATSOCKET	src/sockserver.h	74;"	d
ERR_FD	src/sockserver.h	79;"	d
ERR_LINSTEN	src/sockserver.h	77;"	d
ERR_MALLOC	src/sockserver.h	73;"	d
ERR_RECV	src/sockserver.h	81;"	d
ERR_SEND	src/sockserver.h	80;"	d
ERR_TOOMANYSOCKET	src/sockserver.h	72;"	d
ERR_TYPE	src/sockserver.h	84;"	d
ERR_UDP_RECV	src/sockserver.h	83;"	d
ERR_UDP_SEND	src/sockserver.h	82;"	d
FAILURE	inc/manager_api.h	12;"	d
FAILURE	qtsrc/classes/processpthread.h	9;"	d
FAILURE	qtsrc/widgets/webPage.h	33;"	d
FASTBOOT	qtsrc/classes/daemon.h	19;"	d
FASTBOOT	qtsrc/classes/downloadpthread.h	21;"	d
FASTBOOT	qtsrc/connectionthread.h	16;"	d
FIND	inc/pthread_api.h	10;"	d
FINDDEVICE	qtsrc/classes/daemon.h	/^		int FINDDEVICE  = 0;$/;"	m	class:Daemon
FREE_CLIENT	src/sockserverlib_api.h	22;"	d
FREE_CLINT	src/sockserver.h	94;"	d
FREE_SERVER	src/sockserver.h	93;"	d
FREE_SERVER	src/sockserverlib_api.h	21;"	d
FTPCLIENTWINDOW_H	qtsrc/widgets/ftpclientwindow.h	2;"	d
FTPCLIENT_H	qtsrc/widgets/ftpclient.h	2;"	d
FtpClientWindow	qtsrc/widgets/ftpclientwindow.cpp	/^FtpClientWindow::FtpClientWindow(QWidget *parent) :$/;"	f	class:FtpClientWindow
FtpClientWindow	qtsrc/widgets/ftpclientwindow.h	/^class FtpClientWindow : public QWidget$/;"	c
Ftpclient	qtsrc/widgets/ftpclient.cpp	/^Ftpclient::Ftpclient(QObject *parent) :$/;"	f	class:Ftpclient
Ftpclient	qtsrc/widgets/ftpclient.h	/^class Ftpclient : public QObject$/;"	c
IMAGE	qtsrc/managewindow.h	51;"	d
INCPATH	qtsrc/Makefile	/^INCPATH		:= -I..\/inc -I\/usr\/local\/Trolltech\/Qt-4.8.4\/include$/;"	m
INSTALLAPP	inc/pthread_api.h	12;"	d
INSTALLED	qtsrc/classes/downloadpthread.h	28;"	d
INSTALLING	qtsrc/classes/downloadpthread.h	27;"	d
INVALIDFD	src/sockserver.h	91;"	d
JPEVENT_H	qtsrc/amevent.h	2;"	d
JPNETRECVTRYTIME	src/sockserver.h	95;"	d
JPTIMER_H	qtsrc/classes/daemon.h	2;"	d
JUDGECFD	src/sockserver.h	89;"	d
JUDGESFD	src/sockserver.h	90;"	d
KONG_USB	inc/pthread_api.h	9;"	d
LIBS	qtsrc/Makefile	/^LIBS		:= -L..\/libs -landroidmanage  -L\/usr\/local\/Trolltech\/Qt-4.8.4\/lib$/;"	m
LOGCATDIALOG_H	qtsrc/dialogs/logcatdialog.h	22;"	d
LOGCATMODEL_H	qtsrc/classes/models/logcatmodel.h	22;"	d
LinearPath	qtsrc/animation.h	/^        LinearPath,$/;"	e	enum:Animation::PathType
LoadApp	qtsrc/managewindow.cpp	/^void ManageWindow::LoadApp()$/;"	f	class:ManageWindow
LoadBook	qtsrc/managewindow.cpp	/^void ManageWindow::LoadBook()$/;"	f	class:ManageWindow
LoadConnect	qtsrc/managewindow.cpp	/^void ManageWindow::LoadConnect()$/;"	f	class:ManageWindow
LoadDownloadlist	qtsrc/managewindow.cpp	/^void ManageWindow::LoadDownloadlist()$/;"	f	class:ManageWindow
LoadFtpfilelist	qtsrc/managewindow.cpp	/^void ManageWindow::LoadFtpfilelist()$/;"	f	class:ManageWindow
LoadImage	qtsrc/managewindow.cpp	/^void ManageWindow::LoadImage()$/;"	f	class:ManageWindow
LoadMms	qtsrc/managewindow.cpp	/^void ManageWindow::LoadMms()$/;"	f	class:ManageWindow
LoadMusic	qtsrc/managewindow.cpp	/^void ManageWindow::LoadMusic()$/;"	f	class:ManageWindow
LoadQmenu	qtsrc/managewindow.cpp	/^void ManageWindow::LoadQmenu()$/;"	f	class:ManageWindow
LoadSettings	qtsrc/managewindow.cpp	/^void ManageWindow::LoadSettings()$/;"	f	class:ManageWindow
LoadVideo	qtsrc/managewindow.cpp	/^void ManageWindow::LoadVideo()$/;"	f	class:ManageWindow
LoadWebview	qtsrc/managewindow.cpp	/^void ManageWindow::LoadWebview()$/;"	f	class:ManageWindow
LogcatDialog	qtsrc/dialogs/logcatdialog.cpp	/^LogcatDialog::LogcatDialog(QWidget *parent) :$/;"	f	class:LogcatDialog
LogcatDialog	qtsrc/dialogs/logcatdialog.h	/^class LogcatDialog : public QDialog, public Ui::LogcatDialog$/;"	c
LogcatMessage	qtsrc/classes/models/logcatmodel.cpp	/^LogcatMessage::LogcatMessage(QObject *parent)$/;"	f	class:LogcatMessage
LogcatMessage	qtsrc/classes/models/logcatmodel.cpp	/^LogcatMessage::LogcatMessage(const LogcatMessage& logcatMessage)$/;"	f	class:LogcatMessage
LogcatMessage	qtsrc/classes/models/logcatmodel.h	/^class LogcatMessage : public QObject{$/;"	c
LogcatModel	qtsrc/classes/models/logcatmodel.cpp	/^LogcatModel::LogcatModel(QList< LogcatMessage > logcatList, QObject *parent)$/;"	f	class:LogcatModel
LogcatModel	qtsrc/classes/models/logcatmodel.cpp	/^LogcatModel::LogcatModel(QObject *parent)$/;"	f	class:LogcatModel
LogcatModel	qtsrc/classes/models/logcatmodel.h	/^class LogcatModel : public QAbstractTableModel$/;"	c
Login	qtsrc/classes/settings.h	/^struct Login {$/;"	s
MANAGEWINDOW_H	qtsrc/managewindow.h	2;"	d
MASSIGE	qtsrc/managewindow.h	48;"	d
MAXDATASIZE	src/sampleclient.c	14;"	d	file:
MAXDATASIZE	test/client.c	11;"	d	file:
MAXERRNO	src/sockserver.h	86;"	d
MAXLEN	inc/manager_api.h	8;"	d
MAXLIST	qtsrc/managewindow.h	60;"	d
MAXLIST	qtsrc/widgets/webPage.h	18;"	d
MAXNU	inc/typestruct_api.h	3;"	d
MAXSOCKETNO	src/sockserver.h	88;"	d
MENU	qtsrc/managewindow.h	44;"	d
MMS	qtsrc/managewindow.h	50;"	d
MMSSIGN	qtsrc/managewindow.h	/^		char MMSSIGN = -1;$/;"	m	class:ManageWindow
MMS_DIALOG_H	qtsrc/dialogs/mms_dialog.h	2;"	d
MMS_Dialog	qtsrc/dialogs/mms_dialog.cpp	/^MMS_Dialog::MMS_Dialog(QWidget *parent) :$/;"	f	class:MMS_Dialog
MMS_Dialog	qtsrc/dialogs/mms_dialog.h	/^class MMS_Dialog : public QDialog$/;"	c
MONITOR_USB	qtsrc/amevent.h	9;"	d
MUSIC	qtsrc/managewindow.h	47;"	d
MUTEX	qtsrc/classes/daemon.h	/^		int MUTEX	= 0;$/;"	m	class:Daemon
MainWidget	qtsrc/backpthread.h	/^	QObject* MainWidget;$/;"	m	class:Backthread
MainWidget	qtsrc/classes/daemon.h	/^		QObject* MainWidget;$/;"	m	class:Daemon
MainWidget	qtsrc/classes/settings.h	/^		QObject* MainWidget;$/;"	m	class:Mysetting
Makeconnect	qtsrc/managewindow.cpp	/^void ManageWindow::Makeconnect()$/;"	f	class:ManageWindow
ManageWindow	qtsrc/managewindow.cpp	/^ManageWindow::ManageWindow(QWidget *parent) :$/;"	f	class:ManageWindow
ManageWindow	qtsrc/managewindow.h	/^class ManageWindow : public QMainWindow$/;"	c
Menuaction	qtsrc/managewindow.cpp	/^void ManageWindow::Menuaction(int P_NUM)$/;"	f	class:ManageWindow
Mms_clicked	qtsrc/managewindow.cpp	/^void ManageWindow::Mms_clicked(int a, int b)$/;"	f	class:ManageWindow
Mms_item	qtsrc/managewindow.h	/^		QTableWidgetItem *Mms_item[500][3];$/;"	m	class:ManageWindow
Mms_table	qtsrc/managewindow.h	/^		QTableWidget* Mms_table;$/;"	m	class:ManageWindow
Mysetting	qtsrc/classes/settings.cpp	/^Mysetting::Mysetting(QSettings* objwidget)$/;"	f	class:Mysetting
Mysetting	qtsrc/classes/settings.h	/^class Mysetting : public QSettings$/;"	c
Mysettingsinit	qtsrc/managewindow.cpp	/^void ManageWindow::Mysettingsinit()$/;"	f	class:ManageWindow
NPathTypes	qtsrc/animation.h	/^        NPathTypes$/;"	e	enum:Animation::PathType
OVERSIGN	src/amservice.c	/^int OVERSIGN = 0;$/;"	v
PACKET_LENG	src/sockserver.h	37;"	d
PHONEINFO	qtsrc/managewindow.h	57;"	d
PICTURELISTMODEL_H_	qtsrc/picturelistmodel.h	14;"	d
PORT	src/sampleclient.c	12;"	d	file:
PROCESSPTHREAD_H	qtsrc/classes/processpthread.h	2;"	d
PTHREAD_EXIT_SIG	src/mainthread.c	/^	int PTHREAD_EXIT_SIG = 0;$/;"	v
PathType	qtsrc/animation.h	/^    enum PathType {$/;"	g	class:Animation
PictureListModel	qtsrc/picturelistmodel.cpp	/^PictureListModel::PictureListModel(QObject *parent)$/;"	f	class:PictureListModel
PictureListModel	qtsrc/picturelistmodel.h	/^class PictureListModel : public QAbstractListModel$/;"	c
Player	qtsrc/player.cpp	/^Player::Player(QWidget * parent)$/;"	f	class:Player
Player	qtsrc/player.h	/^class Player : public QWidget$/;"	c
ProcessThread	qtsrc/classes/processpthread.h	/^class ProcessThread: public QThread$/;"	c
ProcessThreadInit	qtsrc/managewindow.cpp	/^void ManageWindow::ProcessThreadInit()$/;"	f	class:ManageWindow
Q_OBJECT	qtsrc/picturelistmodel.h	/^	Q_OBJECT;$/;"	m	class:PictureListModel
Qssinit	qtsrc/managewindow.cpp	/^void ManageWindow::Qssinit(int argc)     \/\/透明度$/;"	f	class:ManageWindow
READDOWNLOAD	qtsrc/classes/downloadpthread.h	23;"	d
RECOVERY	qtsrc/classes/daemon.h	18;"	d
RECOVERY	qtsrc/classes/downloadpthread.h	20;"	d
RECOVERY	qtsrc/connectionthread.h	15;"	d
REFRESHSIGN	src/amservice.c	/^int REFRESHSIGN = 0;$/;"	v
REMOVE_USB	inc/pthread_api.h	7;"	d
REMOVE_USB	qtsrc/classes/daemon.h	14;"	d
RESEND	src/amservice.c	/^int RESEND	= 0x02;$/;"	v
REVERSE16	src/sockserver.h	38;"	d
REVERSE32	src/sockserver.h	39;"	d
Refreshlabinit	qtsrc/managewindow.cpp	/^void ManageWindow::Refreshlabinit()$/;"	f	class:ManageWindow
SCREENSHOTTHREAD_H	qtsrc/threads/screenshotthread.h	22;"	d
SCREENSHOTWIDGET_H	qtsrc/widgets/screenshotwidget.h	2;"	d
SEND_CMD	src/amservice.c	/^char SEND_CMD = 0;$/;"	v
SERVPORT	src/amservice.c	15;"	d	file:
SERVPORT	test/client.c	10;"	d	file:
SETTINGS	qtsrc/managewindow.h	53;"	d
SHELLDIALOG_H	qtsrc/dialogs/shelldialog.h	2;"	d
SHELLWIDGET_H	qtsrc/widgets/shellwidget.h	22;"	d
SIG_START	inc/typestruct_api.h	7;"	d
SIZE	src/amservice.c	/^int SIZE = 0;$/;"	v
SOFT_INIT	qtsrc/amevent.h	8;"	d
SQUEEZELABEL_H	qtsrc/widgets/squeezelabel.h	43;"	d
START_DAEMON	qtsrc/amevent.h	10;"	d
STORAGE	qtsrc/managewindow.h	55;"	d
SUCCEESS	src/sockserver.h	71;"	d
SUCCESS	inc/manager_api.h	11;"	d
SUCCESS	qtsrc/classes/processpthread.h	8;"	d
SUCCESS	qtsrc/widgets/webPage.h	32;"	d
ScreenshotWidget	qtsrc/widgets/screenshotwidget.cpp	/^ScreenshotWidget::ScreenshotWidget(QWidget *parent) :$/;"	f	class:ScreenshotWidget
ScreenshotWidget	qtsrc/widgets/screenshotwidget.h	/^class ScreenshotWidget : public QWidget$/;"	c
ShellDialog	qtsrc/dialogs/shelldialog.cpp	/^ShellDialog::ShellDialog(QWidget *parent) :$/;"	f	class:ShellDialog
ShellDialog	qtsrc/dialogs/shelldialog.h	/^class ShellDialog : public QDialog$/;"	c
ShellWidget	qtsrc/widgets/shellwidget.cpp	/^ShellWidget::ShellWidget(QWidget *parent) :$/;"	f	class:ShellWidget
ShellWidget	qtsrc/widgets/shellwidget.h	/^class ShellWidget : public QTextEdit$/;"	c
SortFilterProxyModel	qtsrc/classes/models/logcatmodel.cpp	/^SortFilterProxyModel::SortFilterProxyModel(QObject *parent) : QSortFilterProxyModel(parent)$/;"	f	class:SortFilterProxyModel
SortFilterProxyModel	qtsrc/classes/models/logcatmodel.h	/^class SortFilterProxyModel : public QSortFilterProxyModel$/;"	c
SqueezeLabel	qtsrc/widgets/squeezelabel.cpp	/^SqueezeLabel::SqueezeLabel(QWidget *parent) : QLabel(parent)$/;"	f	class:SqueezeLabel
SqueezeLabel	qtsrc/widgets/squeezelabel.h	/^class SqueezeLabel : public QLabel$/;"	c
StyleChange	qtsrc/managewindow.cpp	/^void ManageWindow::StyleChange(int StyleString,QDialog *dialogsheet)     \/\/透明度$/;"	f	class:ManageWindow
TEST	qtsrc/managewindow.h	59;"	d
TEXTPROGRESSBAR_H	qtsrc/classes/textprogressbar.h	42;"	d
TYPESTRUCT_H	inc/typestruct.h	2;"	d
TextProgressBar	qtsrc/classes/textprogressbar.cpp	/^TextProgressBar::TextProgressBar()$/;"	f	class:TextProgressBar
TextProgressBar	qtsrc/classes/textprogressbar.h	/^class TextProgressBar$/;"	c
ThreadScreenshot	qtsrc/threads/screenshotthread.h	/^class ThreadScreenshot : public QThread$/;"	c
UEVENT_BUFFER_SIZE	src/mainthread.c	16;"	d	file:
UEVENT_BUFFER_SIZE	src/usbevent.c	7;"	d	file:
UEVENT_BUFFER_SIZE	src/usbpthread.c	15;"	d	file:
USB_STATE	src/usbpthread.c	/^	int USB_STATE = KONG_USB;$/;"	v
Ui	qtsrc/dialogs/mms_dialog.h	/^namespace Ui {$/;"	n
Ui	qtsrc/dialogs/shelldialog.h	/^namespace Ui {$/;"	n
Ui	qtsrc/managewindow.h	/^namespace Ui {$/;"	n
Ui	qtsrc/widgets/downlist.h	/^namespace Ui {$/;"	n
Ui	qtsrc/widgets/ftpclientwindow.h	/^namespace Ui {$/;"	n
Ui	qtsrc/widgets/screenshotwidget.h	/^namespace Ui {$/;"	n
UiDownlist	qtsrc/managewindow.h	/^		QWidget UiDownlist[1000];$/;"	m	class:ManageWindow
UiToolInit	qtsrc/managewindow.cpp	/^void ManageWindow::UiToolInit()$/;"	f	class:ManageWindow
VIDEO	qtsrc/managewindow.h	46;"	d
WAITDATA	inc/pthread_api.h	14;"	d
WEBPAGE_H	qtsrc/widgets/webPage.h	2;"	d
WEBVIEW	qtsrc/managewindow.h	49;"	d
_QT__	qtsrc/Makefile	/^	make __QT__=1$/;"	m
__PLAYER_H_	qtsrc/player.h	2;"	d
__SOCKSERVERLIB_API_H__	src/sockserverlib_api.h	2;"	d
__SOCKSERVER_H__	src/sockserver.h	2;"	d
__allappnfo	inc/typestruct_api.h	/^	typedef struct __allappnfo{$/;"	s
__allbookinfo	inc/typestruct_api.h	/^	typedef struct __allbookinfo{$/;"	s
__alldownloadinfo	qtsrc/widgets/webPage.h	/^typedef struct __alldownloadinfo{$/;"	s
__allinfo	inc/typestruct_api.h	/^	typedef struct __allinfo{$/;"	s
__allmmsinfo	inc/typestruct_api.h	/^	typedef struct __allmmsinfo{$/;"	s
__appinfo	inc/typestruct_api.h	/^	typedef struct __appinfo{$/;"	s
__appthread	src/appthread.c	/^typedef struct __appthread{$/;"	s	file:
__bookinfo	inc/typestruct_api.h	/^	typedef struct __bookinfo{$/;"	s
__cmr_msglib	src/sockserver.h	/^typedef struct __cmr_msglib{$/;"	s
__deviceslist	inc/manager_api.h	/^typedef struct __deviceslist{$/;"	s
__downloadindex	qtsrc/managewindow.h	/^		typedef struct __downloadindex{$/;"	s	class:ManageWindow
__downloadindex	qtsrc/widgets/webPage.h	/^typedef struct __downloadindex{$/;"	s
__downthread	src/downthread.c	/^typedef struct __downthread{$/;"	s	file:
__fileinfo	inc/typestruct_api.h	/^	typedef struct __fileinfo{$/;"	s
__filethread	src/filethread.c	/^typedef struct __filethread{$/;"	s	file:
__mainthread	src/mainthread.c	/^	typedef struct __mainthread{$/;"	s	file:
__managermod	src/monitorusb.c	/^typedef struct __managermod{$/;"	s	file:
__mmsinfo	inc/typestruct_api.h	/^	typedef struct __mmsinfo{$/;"	s
__msglib_errno	src/sockserver.h	/^typedef struct __msglib_errno{$/;"	s
__mutexthread	src/mutexpthread.c	/^typedef struct __mutexthread{$/;"	s	file:
__netthread	src/netthread.c	/^typedef struct __netthread{$/;"	s	file:
__refreshsign	qtsrc/managewindow.h	/^typedef struct __refreshsign{$/;"	s
__sendmessage	inc/typestruct_api.h	/^	typedef struct __sendmessage{$/;"	s
__sendmmsinfo	src/manage.c	/^	typedef struct __sendmmsinfo{$/;"	s	file:
__settingsargv	qtsrc/managewindow.h	/^typedef struct __settingsargv{$/;"	s
__sockthread	src/amservice.c	/^typedef struct __sockthread{$/;"	s	file:
__storageinfo	inc/typestruct_api.h	/^	typedef struct __storageinfo{$/;"	s
__usbthread	src/usbpthread.c	/^	typedef struct __usbthread{$/;"	s	file:
accept	qtsrc/managewindow.cpp	/^void ManageWindow::accept()$/;"	f	class:ManageWindow
acceptNavigationRequest	qtsrc/widgets/webPage.cpp	/^bool webPage::acceptNavigationRequest(QWebFrame *frame, const QNetworkRequest &request, NavigationType type){$/;"	f	class:webPage
adbargv	qtsrc/classes/processpthread.h	/^		QString adbargv;$/;"	m	class:ProcessThread
adbcount	qtsrc/classes/processpthread.h	/^		int adbcount = 0;$/;"	m	class:ProcessThread
adbcount	qtsrc/managewindow.h	/^		int adbcount = 0;$/;"	m	class:ManageWindow
adbresult	qtsrc/managewindow.cpp	/^void ManageWindow::adbresult(int resulttype ,int adbcount,int result)$/;"	f	class:ManageWindow
adbthread	qtsrc/managewindow.h	/^		ProcessThread *adbthread;$/;"	m	class:ManageWindow
addFilterRegExp	qtsrc/classes/models/logcatmodel.cpp	/^void SortFilterProxyModel::addFilterRegExp(qint32 column, const QRegExp &pattern)$/;"	f	class:SortFilterProxyModel
addPictures	qtsrc/picturelistmodel.cpp	/^void PictureListModel::addPictures(QString directory)$/;"	f	class:PictureListModel
addToList	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::addToList(const QUrlInfo &urlInfo)$/;"	f	class:Ftpclient
addToList	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::addToList(const QUrlInfo &urlInfo)$/;"	f	class:FtpClientWindow
addadbcmd	qtsrc/classes/processpthread.cpp	/^void ProcessThread::addadbcmd(int cmdtype,int adbcount ,QString cmd)$/;"	f	class:ProcessThread
addadbcmdslot	qtsrc/managewindow.cpp	/^void ManageWindow::addadbcmdslot(int downcount,int adb_type, int adb_count, QString adb_list)$/;"	f	class:ManageWindow
adddownloadurl	qtsrc/classes/downloadpthread.cpp	/^void DownloadThread::adddownloadurl(int downloadcount,QString url)$/;"	f	class:DownloadThread
adddownloadurl	qtsrc/managewindow.cpp	/^void ManageWindow::adddownloadurl(int downcount,double speed,int percent,int stat,QString filename)$/;"	f	class:ManageWindow
addmanager	qtsrc/managewindow.h	/^		DownloadManager *addmanager;$/;"	m	class:ManageWindow
addstartdownload	qtsrc/managewindow.cpp	/^void ManageWindow::addstartdownload(int downcount,double speed,int percent,int stat,QString filename)$/;"	f	class:ManageWindow
allappinfo_t	inc/typestruct_api.h	/^	}allappinfo_t;$/;"	t	typeref:struct:__allappnfo
allbookinfo_t	inc/typestruct_api.h	/^	}allbookinfo_t;$/;"	t	typeref:struct:__allbookinfo
alldownloadinfo	qtsrc/widgets/webPage.h	/^		alldownloadinfo_t alldownloadinfo;$/;"	m	class:webPage
alldownloadinfo_t	qtsrc/widgets/webPage.h	/^}alldownloadinfo_t;$/;"	t	typeref:struct:__alldownloadinfo
allinfo_t	inc/typestruct_api.h	/^	}allinfo_t;$/;"	t	typeref:struct:__allinfo
allmmsinfo_t	inc/typestruct_api.h	/^	}allmmsinfo_t;$/;"	t	typeref:struct:__allmmsinfo
allpthread_exit	src/mainthread.c	/^	void allpthread_exit()$/;"	f
amservicestart	src/amservice.c	/^int amservicestart() $/;"	f
app	qtsrc/managewindow.h	/^	int app	= 1;$/;"	m	struct:__refreshsign
app_install	src/manage.c	/^	int app_install(char *argv)$/;"	f
app_pthread	src/appthread.c	/^void* app_pthread(void* arg) $/;"	f
app_show	src/manage.c	/^	char * app_show(char *argv)$/;"	f
app_thread_init	src/appthread.c	/^int app_thread_init(void)$/;"	f
app_uninstall	src/manage.c	/^	int app_uninstall(char *argv)$/;"	f
appattribute	inc/typestruct_api.h	/^		int  appattribute;  \/\/ system app or user app$/;"	m	struct:__appinfo
append	qtsrc/classes/downloadmanager.cpp	/^void DownloadManager::append(const QStringList &urlList)$/;"	f	class:DownloadManager
append	qtsrc/classes/downloadmanager.cpp	/^void DownloadManager::append(const QUrl &url)$/;"	f	class:DownloadManager
appindex	qtsrc/managewindow.h	/^		int appindex[4][100];$/;"	m	class:ManageWindow
appinfo	inc/typestruct.h	/^allappinfo_t appinfo;$/;"	v
appinfo_t	inc/typestruct_api.h	/^	}appinfo_t;$/;"	t	typeref:struct:__appinfo
appname	inc/typestruct_api.h	/^		char appname[50];$/;"	m	struct:__appinfo
apppackname	inc/typestruct_api.h	/^		char apppackname[100];$/;"	m	struct:__appinfo
apppath	inc/typestruct_api.h	/^		int  apppath;       \/\/ in sdcard or phonestore$/;"	m	struct:__appinfo
appsize	inc/typestruct_api.h	/^		char appsize[16];$/;"	m	struct:__appinfo
appthread	src/appthread.c	/^static appthread_t appthread;$/;"	v	file:
appthread_t	src/appthread.c	/^}appthread_t;$/;"	t	typeref:struct:__appthread	file:
appversion	inc/typestruct_api.h	/^		char appversion[15];$/;"	m	struct:__appinfo
arguments	qtsrc/classes/downloadpthread.h	/^		QStringList arguments;$/;"	m	class:DownloadThread
backappinfo	qtsrc/backpthread.cpp	/^allappinfo_t backappinfo;$/;"	v
backwardButton	qtsrc/managewindow.h	/^		QPushButton *backwardButton;$/;"	m	class:ManageWindow
beforetime	qtsrc/widgets/webPage.h	/^		int beforetime = 0;$/;"	m	class:Downloadthread
beforetime	qtsrc/widgets/webPage.h	/^		int beforetime = 0;$/;"	m	class:webPage
book	qtsrc/managewindow.h	/^	int book = 1;$/;"	m	struct:__refreshsign
bookinfo	inc/typestruct.h	/^allbookinfo_t bookinfo;$/;"	v
bookinfo_t	inc/typestruct_api.h	/^	}bookinfo_t;$/;"	t	typeref:struct:__bookinfo
bookname	inc/typestruct_api.h	/^		char bookname[20]; $/;"	m	struct:__bookinfo
booknumber	inc/typestruct_api.h	/^		char booknumber[18];$/;"	m	struct:__bookinfo
btn_app_clicked	qtsrc/managewindow.cpp	/^void ManageWindow::btn_app_clicked()$/;"	f	class:ManageWindow
btn_book_clicked	qtsrc/managewindow.cpp	/^void ManageWindow::btn_book_clicked()$/;"	f	class:ManageWindow
bufferLimit	qtsrc/dialogs/logcatdialog.h	/^    int bufferLimit;$/;"	m	class:LogcatDialog
buffersize	src/usbpthread.c	/^	int buffersize = 1024;$/;"	v
buttonLayout	qtsrc/managewindow.h	/^		QHBoxLayout *buttonLayout;$/;"	m	class:ManageWindow
bytes_to_int	qtsrc/threads/screenshotthread.cpp	/^unsigned int bytes_to_int(QByteArray data, int start)$/;"	f
c_addr	src/sockserver.h	/^	struct sockaddr_in c_addr;$/;"	m	struct:dtmsg	typeref:struct:dtmsg::sockaddr_in
c_addrsize	src/sockserver.h	/^	socklen_t c_addrsize;$/;"	m	struct:dtmsg
c_delay	src/manage.c	/^	void c_delay(int num)$/;"	f
callDownload	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::callDownload()$/;"	f	class:FtpClientWindow
cfd	src/sockserver.h	/^	int cfd;$/;"	m	struct:dtmsg
changeDir	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::changeDir(const QString &dir)$/;"	f	class:Ftpclient
changeToParrent	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::changeToParrent()$/;"	f	class:FtpClientWindow
checkapp	qtsrc/classes/daemon.cpp	/^int Daemon::checkapp()$/;"	f	class:Daemon
checkappversion	src/manage.c	/^	int checkappversion()$/;"	f
cleanbuf	src/mainthread.c	/^	void cleanbuf()$/;"	f
cleansig	src/amservice.c	/^void cleansig()$/;"	f
clear	qtsrc/classes/models/logcatmodel.cpp	/^bool LogcatModel::clear()$/;"	f	class:LogcatModel
clear	qtsrc/classes/textprogressbar.cpp	/^void TextProgressBar::clear()$/;"	f	class:TextProgressBar
clearFilters	qtsrc/classes/models/logcatmodel.cpp	/^void SortFilterProxyModel::clearFilters()$/;"	f	class:SortFilterProxyModel
clearMemory	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::clearMemory(QList<QListWidgetItem*> &listItemCtn)$/;"	f	class:FtpClientWindow
client	src/usbpthread.c	/^	struct sockaddr_nl client;$/;"	v	typeref:struct:sockaddr_nl
closeEvent	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::closeEvent(QCloseEvent *event)$/;"	f	class:LogcatDialog
closeEvent	qtsrc/managewindow.cpp	/^void ManageWindow::closeEvent(QCloseEvent *event)$/;"	f	class:ManageWindow
closeId	qtsrc/widgets/ftpclient.h	/^    int connectId, loginId, closeId;$/;"	m	class:Ftpclient
close_sockfd	src/sockserver.c	/^	void close_sockfd(int fd)$/;"	f
cmd	qtsrc/classes/daemon.h	/^	int cmd;$/;"	m	struct:tag_timerdata
cmdinfo	qtsrc/classes/downloadpthread.h	/^		int	cmdinfo = 0;$/;"	m	class:DownloadThread
cmdtype	qtsrc/classes/processpthread.h	/^		int cmdtype  = 0;$/;"	m	class:ProcessThread
cmr_msglib_t	src/sockserver.h	/^}cmr_msglib_t;$/;"	t	typeref:struct:__cmr_msglib
columnCount	qtsrc/classes/models/logcatmodel.cpp	/^int LogcatModel::columnCount(const QModelIndex &parent) const$/;"	f	class:LogcatModel
command	qtsrc/widgets/shellwidget.h	/^    QString command;$/;"	m	class:ShellWidget
commandHistory	qtsrc/widgets/shellwidget.h	/^    QStringList commandHistory;$/;"	m	class:ShellWidget
commandHistoryPosition	qtsrc/widgets/shellwidget.h	/^    int commandHistoryPosition;$/;"	m	class:ShellWidget
commands	qtsrc/widgets/shellwidget.h	/^    QStringList commands;$/;"	m	class:ShellWidget
configWidget	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::configWidget()$/;"	f	class:FtpClientWindow
connectId	qtsrc/widgets/ftpclient.h	/^    int connectId, loginId, closeId;$/;"	m	class:Ftpclient
connected	qtsrc/widgets/ftpclient.h	/^    bool connected;$/;"	m	class:Ftpclient
connectinit	qtsrc/managewindow.cpp	/^void ManageWindow::connectinit()$/;"	f	class:ManageWindow
connecttest	qtsrc/classes/daemon.h	/^		ConnectThread  *connecttest;$/;"	m	class:Daemon
contextMenu	qtsrc/dialogs/logcatdialog.h	/^    QMenu *contextMenu;$/;"	m	class:LogcatDialog
controlCmd	qtsrc/player.cpp	/^void Player::controlCmd(const QString &cmd)$/;"	f	class:Player
copySelectedToClipboard	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::copySelectedToClipboard()$/;"	f	class:LogcatDialog
count	inc/typestruct_api.h	/^		int count;$/;"	m	struct:__allappnfo
count	inc/typestruct_api.h	/^		int count;$/;"	m	struct:__allbookinfo
count	inc/typestruct_api.h	/^		int count;$/;"	m	struct:__allinfo
count	inc/typestruct_api.h	/^		int count;$/;"	m	struct:__allmmsinfo
curPath	qtsrc/widgets/ftpclient.h	/^    QString curPath;$/;"	m	class:Ftpclient
currentDownload	qtsrc/classes/downloadmanager.h	/^    QNetworkReply *currentDownload;$/;"	m	class:DownloadManager
currentDownload	qtsrc/widgets/webPage.h	/^		QNetworkReply *currentDownload[10000];$/;"	m	class:Downloadthread
currentDownload	qtsrc/widgets/webPage.h	/^		QNetworkReply *currentDownload[10000];$/;"	m	class:webPage
currentFileName	qtsrc/managewindow.h	/^		QString currentFileName;$/;"	m	class:ManageWindow
current_device	inc/manager_api.h	/^	char current_device[16];$/;"	m	struct:__deviceslist
cursor	qtsrc/widgets/shellwidget.h	/^    QTextCursor cursor;$/;"	m	class:ShellWidget
cursorPosition	qtsrc/widgets/shellwidget.h	/^    int cursorPosition;$/;"	m	class:ShellWidget
customEvent	qtsrc/backpthread.cpp	/^void Backthread::customEvent(QEvent* e){$/;"	f	class:Backthread
customEvent	qtsrc/classes/daemon.cpp	/^void Daemon::customEvent(QEvent* e){$/;"	f	class:Daemon
customEvent	qtsrc/managewindow.cpp	/^void ManageWindow::customEvent(QEvent* e){$/;"	f	class:ManageWindow
data	qtsrc/classes/models/logcatmodel.cpp	/^QVariant LogcatModel::data(const QModelIndex &index, int role) const$/;"	f	class:LogcatModel
data	qtsrc/picturelistmodel.cpp	/^QVariant PictureListModel::data(const QModelIndex &index, int role) const$/;"	f	class:PictureListModel
deviceinit	src/mainthread.c	/^	void deviceinit()$/;"	f
devicelist	src/manage.c	/^	char devicelist[20];$/;"	v
deviceslist_t	inc/manager_api.h	/^}deviceslist_t;$/;"	t	typeref:struct:__deviceslist
dialogUi	qtsrc/managewindow.h	/^		Ui::dialog *dialogUi; $/;"	m	class:ManageWindow
dialog_accept	qtsrc/dialogs/mms_dialog.cpp	/^void MMS_Dialog::dialog_accept()$/;"	f	class:MMS_Dialog
displayUrlAddr	qtsrc/managewindow.cpp	/^void ManageWindow::displayUrlAddr(const QUrl &url)$/;"	f	class:ManageWindow
dlg	qtsrc/managewindow.h	/^		QDialog *dlg = new QDialog;$/;"	m	class:ManageWindow
down	src/down.c	/^void down()$/;"	f
downLoadFile	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::downLoadFile(const QString &filename)$/;"	f	class:FtpClientWindow
down_pthread	src/downthread.c	/^void* down_pthread(void* arg) $/;"	f
downcount	qtsrc/widgets/webPage.h	/^		int downcount = -1;$/;"	m	class:Downloadthread
downcount	qtsrc/widgets/webPage.h	/^		int downcount = -1;$/;"	m	class:webPage
downcount	qtsrc/widgets/webPage.h	/^	int downcount;$/;"	m	struct:__alldownloadinfo
downloadFile	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::downloadFile(const QString &filename)$/;"	f	class:Ftpclient
downloadFinished	qtsrc/classes/downloadmanager.cpp	/^void DownloadManager::downloadFinished()$/;"	f	class:DownloadManager
downloadFinished	qtsrc/widgets/webPage.cpp	/^void Downloadthread::downloadFinished()$/;"	f	class:Downloadthread
downloadFinished	qtsrc/widgets/webPage.cpp	/^void webPage::downloadFinished()$/;"	f	class:webPage
downloadProgress	qtsrc/classes/downloadmanager.cpp	/^void DownloadManager::downloadProgress(qint64 bytesReceived, qint64 bytesTotal)$/;"	f	class:DownloadManager
downloadProgress	qtsrc/widgets/webPage.cpp	/^void Downloadthread::downloadProgress(qint64 bytesReceived, qint64 bytesTotal)$/;"	f	class:Downloadthread
downloadProgress	qtsrc/widgets/webPage.cpp	/^void webPage::downloadProgress(qint64 bytesReceived, qint64 bytesTotal)$/;"	f	class:webPage
downloadQueue	qtsrc/classes/downloadmanager.h	/^    QQueue<QUrl> downloadQueue;$/;"	m	class:DownloadManager
downloadReadyRead	qtsrc/classes/downloadmanager.cpp	/^void DownloadManager::downloadReadyRead()$/;"	f	class:DownloadManager
downloadReadyRead	qtsrc/widgets/webPage.cpp	/^void Downloadthread::downloadReadyRead()$/;"	f	class:Downloadthread
downloadReadyRead	qtsrc/widgets/webPage.cpp	/^void webPage::downloadReadyRead()$/;"	f	class:webPage
downloadTime	qtsrc/classes/downloadmanager.h	/^    QTime downloadTime;$/;"	m	class:DownloadManager
downloadTime	qtsrc/widgets/webPage.h	/^		QTime downloadTime;$/;"	m	class:Downloadthread
downloadTime	qtsrc/widgets/webPage.h	/^		QTime downloadTime;$/;"	m	class:webPage
download_info	qtsrc/managewindow.h	/^		downloadindex_t download_info[MAXLIST];$/;"	m	class:ManageWindow
download_thread_init	src/downthread.c	/^int download_thread_init(void)$/;"	f
downloadcount	qtsrc/classes/downloadpthread.h	/^		int downloadcount = 0; $/;"	m	class:DownloadThread
downloadedCount	qtsrc/classes/downloadmanager.h	/^    int downloadedCount;$/;"	m	class:DownloadManager
downloadindex_t	qtsrc/managewindow.h	/^		}downloadindex_t;$/;"	t	class:ManageWindow	typeref:struct:ManageWindow::__downloadindex
downloadindex_t	qtsrc/widgets/webPage.h	/^}downloadindex_t;$/;"	t	typeref:struct:__downloadindex
downloadinfo	qtsrc/classes/downloadpthread.cpp	/^void DownloadThread::downloadinfo(int count ,QString name,QString size,QString pecent, int speed,int state)$/;"	f	class:DownloadThread
downloadlist	qtsrc/classes/downloadpthread.h	/^		QList<QString> downloadlist;$/;"	m	class:DownloadThread
downloadlist	qtsrc/managewindow.h	/^		Downloadlist  downloadlist[1000];	$/;"	m	class:ManageWindow
downloadpath	qtsrc/managewindow.h	/^	QString downloadpath;$/;"	m	struct:__settingsargv
downloadsign	qtsrc/widgets/webPage.h	/^		int downloadsign= 1;$/;"	m	class:Downloadthread
downloadsign	qtsrc/widgets/webPage.h	/^		int downloadsign= 1;$/;"	m	class:webPage
downloadthread	qtsrc/classes/daemon.h	/^		DownloadThread *downloadthread;$/;"	m	class:Daemon
downloadthread	qtsrc/widgets/webPage.h	/^		Downloadthread *downloadthread[1000];$/;"	m	class:webPage
downloadwait	qtsrc/widgets/webPage.h	/^		QList<QString> downloadwait;$/;"	m	class:webPage
downname	qtsrc/managewindow.h	/^		QLabel *downname[1000];$/;"	m	class:ManageWindow
downprogress	qtsrc/managewindow.h	/^		QProgressBar *downprogress[1000];$/;"	m	class:ManageWindow
downstat	qtsrc/managewindow.h	/^		QLabel *downstat[1000];$/;"	m	class:ManageWindow
downthread	src/downthread.c	/^static downthread_t downthread;$/;"	v	file:
downthread_t	src/downthread.c	/^}downthread_t;$/;"	t	typeref:struct:__downthread	file:
downurllist	qtsrc/widgets/webPage.h	/^		QStringList downurllist;$/;"	m	class:Downloadthread
downurllist	qtsrc/widgets/webPage.h	/^		QStringList downurllist;$/;"	m	class:webPage
dtcmr_accept	src/sockserver.c	/^	int dtcmr_accept(int fd)$/;"	f
dtcmr_client_creat	src/sockserver.c	/^	int dtcmr_client_creat(char *serverip, short port, int type)$/;"	f
dtcmr_free	src/sockserver.c	/^	void dtcmr_free(int fd)$/;"	f
dtcmr_msg_t	src/sockserver.h	/^}dtcmr_msg_t;$/;"	t	typeref:struct:dtmsg
dtcmr_rcvtimeout	src/sockserver.c	/^	static int dtcmr_rcvtimeout(int fd, char *buf, int leng, struct timeval *timeout)$/;"	f	file:
dtcmr_recv	src/sockserver.c	/^	int dtcmr_recv(int fd, char *buf, int leng) $/;"	f
dtcmr_recv_timeout	src/sockserver.c	/^	int dtcmr_recv_timeout(int fd, char *buf, int leng, struct timeval *timeout) $/;"	f
dtcmr_send	src/sockserver.c	/^	int dtcmr_send(int fd, char *buf, int leng)$/;"	f
dtcmr_serv_creat	src/sockserver.c	/^	int dtcmr_serv_creat(short sport, int listenback, int type)$/;"	f
dtcmr_shotdown	src/sockserver.c	/^	void dtcmr_shotdown(int fd, int flags)$/;"	f
dtcmr_udp_recv	src/sockserver.c	/^	int dtcmr_udp_recv(int fd, char *buf, int leng) $/;"	f
dtcmr_udp_send	src/sockserver.c	/^	int dtcmr_udp_send(int fd, char *buf, int leng)$/;"	f
dtmsg	src/sockserver.h	/^	dtcmr_msg_t *dtmsg;$/;"	m	struct:__cmr_msglib
dtmsg	src/sockserver.h	/^typedef struct dtmsg{$/;"	s
errnb	src/sockserver.h	/^	int errnb;$/;"	m	struct:__msglib_errno
errstr	src/sockserver.h	/^	char *errstr;$/;"	m	struct:__msglib_errno
exec_system	src/sh_module.c	/^int exec_system(char *argv)$/;"	f
executeBufferLimitation	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::executeBufferLimitation()$/;"	f	class:LogcatDialog
executeCommand	qtsrc/widgets/shellwidget.cpp	/^void ShellWidget::executeCommand(QString command)$/;"	f	class:ShellWidget
exit_sock	src/amservice.c	/^void exit_sock()$/;"	f
exportSelectedToFile	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::exportSelectedToFile()$/;"	f	class:LogcatDialog
fds	src/usbpthread.c	/^	fd_set fds;$/;"	v
file	qtsrc/widgets/ftpclient.h	/^    QFile *file;$/;"	m	class:Ftpclient
file	src/file.c	/^file()$/;"	f
file_pthread	src/filethread.c	/^void* file_pthread(void* arg) $/;"	f
file_thread_init	src/filethread.c	/^int file_thread_init(void)$/;"	f
fileinfo_t	inc/typestruct_api.h	/^	}fileinfo_t;$/;"	t	typeref:struct:__fileinfo
filename	inc/typestruct_api.h	/^		char filename[50];$/;"	m	struct:__fileinfo
filename	qtsrc/managewindow.h	/^			QString filename;$/;"	m	struct:ManageWindow::__downloadindex
filename	qtsrc/widgets/webPage.h	/^		QString filename;$/;"	m	class:Downloadthread
filename	qtsrc/widgets/webPage.h	/^		QString filename;$/;"	m	class:webPage
filename	qtsrc/widgets/webPage.h	/^	QString filename;$/;"	m	struct:__downloadindex
filepath	inc/typestruct_api.h	/^		char filepath[200];$/;"	m	struct:__fileinfo
filesize	inc/typestruct_api.h	/^		char filesize[16];$/;"	m	struct:__fileinfo
filethread	src/filethread.c	/^static filethread_t filethread;$/;"	v	file:
filethread_t	src/filethread.c	/^}filethread_t;$/;"	t	typeref:struct:__filethread	file:
filter	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::filter()$/;"	f	class:LogcatDialog
filterAcceptsRow	qtsrc/classes/models/logcatmodel.cpp	/^bool SortFilterProxyModel::filterAcceptsRow(int sourceRow, const QModelIndex &sourceParent) const$/;"	f	class:SortFilterProxyModel
filterModel	qtsrc/dialogs/logcatdialog.h	/^    SortFilterProxyModel *filterModel;$/;"	m	class:LogcatDialog
find_devices	src/manage.c	/^	int find_devices()$/;"	f
flags	qtsrc/classes/models/logcatmodel.cpp	/^Qt::ItemFlags LogcatModel::flags(const QModelIndex &index) const$/;"	f	class:LogcatModel
fontColor	qtsrc/widgets/shellwidget.h	/^    QColor fontColor;$/;"	m	class:ShellWidget
freeresource	src/sockserver.c	/^	static inline void freeresource(int fd) $/;"	f	file:
ftp	qtsrc/widgets/ftpclient.h	/^    QFtp ftp;$/;"	m	class:Ftpclient
ftpConnect	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::ftpConnect()$/;"	f	class:Ftpclient
ftpConnect	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::ftpConnect()$/;"	f	class:FtpClientWindow
ftpHostChanged	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::ftpHostChanged()$/;"	f	class:FtpClientWindow
ftpLogout	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::ftpLogout()$/;"	f	class:Ftpclient
ftpPortChanged	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::ftpPortChanged()$/;"	f	class:FtpClientWindow
ftpPwdChanged	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::ftpPwdChanged()$/;"	f	class:FtpClientWindow
ftpUserChanged	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::ftpUserChanged()$/;"	f	class:FtpClientWindow
ftpclient	qtsrc/widgets/ftpclientwindow.h	/^    Ftpclient ftpclient;$/;"	m	class:FtpClientWindow
ftpcommandFinished	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::ftpcommandFinished(int id, bool error)$/;"	f	class:Ftpclient
ftpcommandStarted	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::ftpcommandStarted(int id)$/;"	f	class:Ftpclient
ftpfilelist	qtsrc/managewindow.h	/^		FtpClientWindow *ftpfilelist;$/;"	m	class:ManageWindow
getCurrentPath	qtsrc/widgets/ftpclient.h	/^    QString getCurrentPath() const { return curPath; }$/;"	f	class:Ftpclient
getList	qtsrc/classes/models/logcatmodel.cpp	/^QList< LogcatMessage > LogcatModel::getList()$/;"	f	class:LogcatModel
getRow	qtsrc/classes/models/logcatmodel.cpp	/^LogcatMessage LogcatModel::getRow(int row)$/;"	f	class:LogcatModel
getUrlStr	qtsrc/widgets/ftpclient.cpp	/^QString Ftpclient::getUrlStr(const QUrl &url)$/;"	f	class:Ftpclient
get_curdev	src/manage.c	/^	void get_curdev(char *devname)$/;"	f
get_data	qtsrc/dialogs/mms_dialog.cpp	/^void MMS_Dialog::get_data()$/;"	f	class:MMS_Dialog
get_info	inc/typestruct_api.h	/^		appinfo_t get_info[APPMAXNU];$/;"	m	struct:__allappnfo
get_info	inc/typestruct_api.h	/^		bookinfo_t get_info[BOOKMAXNU];$/;"	m	struct:__allbookinfo
get_info	inc/typestruct_api.h	/^		fileinfo_t get_info[MAXNU];$/;"	m	struct:__allinfo
get_info	inc/typestruct_api.h	/^		mmsinfo_t get_info[BOOKMAXNU];$/;"	m	struct:__allmmsinfo
get_info	qtsrc/widgets/webPage.h	/^	downloadindex_t get_info[MAXLIST];$/;"	m	struct:__alldownloadinfo
get_message	qtsrc/managewindow.cpp	/^void ManageWindow::get_message()$/;"	f	class:ManageWindow
getappinfo	src/app.c	/^	void getappinfo(allappinfo_t *uiappinfo)$/;"	f
getbookbuf	src/amservice.c	/^char getbookbuf[1024 * 1000] = {0};$/;"	v
getbookinfo	src/book.c	/^	void getbookinfo(allbookinfo_t *uibookinfo)$/;"	f
getbuf	src/amservice.c	/^char getbuf[1024 * 1000] = {0};$/;"	v
getminmsglibfd	src/sockserver.c	/^	static inline int getminmsglibfd(void)$/;"	f	file:
getmmsbuf	src/amservice.c	/^char getmmsbuf[1024 * 10000] = {0};$/;"	v
getmmsinfo	src/mms.c	/^	void getmmsinfo(allmmsinfo_t *uimmsinfo)$/;"	f
getmsgliberrinfo	src/sockserver.c	/^	char *getmsgliberrinfo(int errnb)$/;"	f
getstoragebuf	src/amservice.c	/^char getstoragebuf[200] = {0};$/;"	v
getstorageinfo	src/storage.c	/^	void getstorageinfo(storageinfo_t *uistorageinfo)$/;"	f
goBack	qtsrc/managewindow.h	/^		QPushButton *goBack;$/;"	m	class:ManageWindow
goForward	qtsrc/managewindow.h	/^		QPushButton *goForward;$/;"	m	class:ManageWindow
goto_applist	qtsrc/managewindow.cpp	/^void ManageWindow::goto_applist()$/;"	f	class:ManageWindow
goto_appstore	qtsrc/managewindow.cpp	/^void ManageWindow::goto_appstore()$/;"	f	class:ManageWindow
goto_book	qtsrc/managewindow.cpp	/^void ManageWindow::goto_book()$/;"	f	class:ManageWindow
goto_booksendmms	qtsrc/managewindow.cpp	/^void ManageWindow::goto_booksendmms()$/;"	f	class:ManageWindow
goto_call	qtsrc/managewindow.cpp	/^void ManageWindow::goto_call()$/;"	f	class:ManageWindow
goto_connect	qtsrc/managewindow.cpp	/^void  ManageWindow::goto_connect()$/;"	f	class:ManageWindow
goto_helpdev	qtsrc/managewindow.cpp	/^void ManageWindow::goto_helpdev()$/;"	f	class:ManageWindow
goto_hiden	qtsrc/managewindow.cpp	/^void ManageWindow::goto_hiden()$/;"	f	class:ManageWindow
goto_imagelist	qtsrc/managewindow.cpp	/^void ManageWindow::goto_imagelist()$/;"	f	class:ManageWindow
goto_install	qtsrc/managewindow.cpp	/^void ManageWindow::goto_install()$/;"	f	class:ManageWindow
goto_jf	qtsrc/managewindow.cpp	/^void ManageWindow::goto_jf()$/;"	f	class:ManageWindow
goto_logcat	qtsrc/managewindow.cpp	/^void ManageWindow::goto_logcat()$/;"	f	class:ManageWindow
goto_manager	qtsrc/managewindow.cpp	/^void ManageWindow::goto_manager()$/;"	f	class:ManageWindow
goto_mmsdetail	qtsrc/managewindow.cpp	/^void ManageWindow::goto_mmsdetail()$/;"	f	class:ManageWindow
goto_mmsrefresh	qtsrc/managewindow.cpp	/^void ManageWindow::goto_mmsrefresh()$/;"	f	class:ManageWindow
goto_nextimage	qtsrc/managewindow.cpp	/^void ManageWindow::goto_nextimage()$/;"	f	class:ManageWindow
goto_phoneinfo	qtsrc/managewindow.cpp	/^void ManageWindow::goto_phoneinfo()$/;"	f	class:ManageWindow
goto_refreshsystem	qtsrc/managewindow.cpp	/^void ManageWindow::goto_refreshsystem()$/;"	f	class:ManageWindow
goto_screenrefresh	qtsrc/managewindow.cpp	/^void ManageWindow::goto_screenrefresh()$/;"	f	class:ManageWindow
goto_sendmms	qtsrc/managewindow.cpp	/^void ManageWindow::goto_sendmms()$/;"	f	class:ManageWindow
goto_setdownloadpath	qtsrc/managewindow.cpp	/^void ManageWindow::goto_setdownloadpath()$/;"	f	class:ManageWindow
goto_settings	qtsrc/managewindow.cpp	/^void ManageWindow::goto_settings()$/;"	f	class:ManageWindow
goto_shell	qtsrc/managewindow.cpp	/^void ManageWindow::goto_shell()$/;"	f	class:ManageWindow
goto_storage	qtsrc/managewindow.cpp	/^void ManageWindow::goto_storage()$/;"	f	class:ManageWindow
goto_uninstall	qtsrc/managewindow.cpp	/^void ManageWindow::goto_uninstall()$/;"	f	class:ManageWindow
goto_wdj	qtsrc/managewindow.cpp	/^void ManageWindow::goto_wdj()$/;"	f	class:ManageWindow
handleUnsupportedContent	qtsrc/widgets/webPage.cpp	/^void webPage::handleUnsupportedContent(QNetworkReply *reply)$/;"	f	class:webPage
handle_error	src/sockserver.h	34;"	d
headerData	qtsrc/classes/models/logcatmodel.cpp	/^QVariant LogcatModel::headerData(int section, Qt::Orientation orientation, int role) const$/;"	f	class:LogcatModel
heightScreen	qtsrc/threads/screenshotthread.h	/^    int widthScreen, heightScreen;$/;"	m	class:ThreadScreenshot
i	src/amservice.c	/^int i = 0;$/;"	v
image	qtsrc/managewindow.h	/^	int image= 1;$/;"	m	struct:__refreshsign
imageinfo	inc/typestruct.h	/^allinfo_t imageinfo;$/;"	v
initConnection	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::initConnection()$/;"	f	class:Ftpclient
initConnection	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::initConnection()$/;"	f	class:FtpClientWindow
insertMessage	qtsrc/classes/models/logcatmodel.cpp	/^bool LogcatModel::insertMessage(LogcatMessage logcatMessage)$/;"	f	class:LogcatModel
insertMessage	qtsrc/classes/models/logcatmodel.cpp	/^bool LogcatModel::insertMessage(int position, LogcatMessage logcatMessage)$/;"	f	class:LogcatModel
insertRows	qtsrc/classes/models/logcatmodel.cpp	/^bool LogcatModel::insertRows(int position, int rows, const QModelIndex &index)$/;"	f	class:LogcatModel
insertedChars	qtsrc/widgets/shellwidget.h	/^    int insertedChars;$/;"	m	class:ShellWidget
installapp	src/manage.c	/^	char installapp[100] = {0};$/;"	v
isDir	qtsrc/widgets/ftpclient.cpp	/^bool Ftpclient::isDir(const QString &str) const$/;"	f	class:Ftpclient
isDir	qtsrc/widgets/ftpclientwindow.cpp	/^bool FtpClientWindow::isDir(const QString &str) const$/;"	f	class:FtpClientWindow
isDirHash	qtsrc/widgets/ftpclient.h	/^	QHash<QString, bool> isDirHash;$/;"	m	class:Ftpclient
iteration	qtsrc/classes/textprogressbar.h	/^    int iteration;$/;"	m	class:TextProgressBar
iteration	qtsrc/widgets/webPage.h	/^		int iteration = 0;$/;"	m	class:Downloadthread
iteration	qtsrc/widgets/webPage.h	/^		int iteration = 0;$/;"	m	class:webPage
judgefd	src/sockserver.c	/^	static inline int judgefd(int fd, int flags)$/;"	f	file:
keyPressEvent	qtsrc/widgets/shellwidget.cpp	/^void ShellWidget::keyPressEvent(QKeyEvent *e)$/;"	f	class:ShellWidget
label	qtsrc/managewindow.h	/^		QLabel* label;$/;"	m	class:ManageWindow
len	src/manage.c	/^	int len  = 0;$/;"	v
limit	qtsrc/classes/downloadpthread.h	/^		int limit	= 0;$/;"	m	class:DownloadThread
list	inc/manager_api.h	/^	char * list[16];$/;"	m	struct:__deviceslist
listItemChanged	qtsrc/managewindow.cpp	/^void ManageWindow::listItemChanged(const QModelIndex &current, const QModelIndex &previous)$/;"	f	class:ManageWindow
listItemCtn	qtsrc/widgets/ftpclientwindow.h	/^	QList<QListWidgetItem*> listItemCtn;$/;"	m	class:FtpClientWindow
listModel	qtsrc/managewindow.h	/^		PictureListModel *listModel;$/;"	m	class:ManageWindow
loadUrlAddr	qtsrc/managewindow.cpp	/^void ManageWindow::loadUrlAddr()$/;"	f	class:ManageWindow
logcat	qtsrc/managewindow.h	/^		LogcatDialog *logcat;$/;"	m	class:ManageWindow
logcatList	qtsrc/classes/models/logcatmodel.h	/^    QList< LogcatMessage > logcatList;$/;"	m	class:LogcatModel
logcatModel	qtsrc/dialogs/logcatdialog.h	/^    LogcatModel *logcatModel;$/;"	m	class:LogcatDialog
logfp	qtsrc/backpthread.h	/^	FILE* logfp;$/;"	m	class:Backthread
loginId	qtsrc/widgets/ftpclient.h	/^    int connectId, loginId, closeId;$/;"	m	class:Ftpclient
m_anim	qtsrc/managewindow.h	/^		Animation *m_anim;$/;"	m	class:ManageWindow
m_devices	qtsrc/managewindow.h	/^		deviceslist_t m_devices;$/;"	m	class:ManageWindow
m_path	qtsrc/animation.h	/^    QPainterPath m_path;$/;"	m	class:Animation
m_pathType	qtsrc/animation.h	/^    PathType m_pathType;$/;"	m	class:Animation
m_requestFileName	qtsrc/widgets/webPage.h	/^		bool m_requestFileName;$/;"	m	class:webPage
main	qtsrc/main.cpp	/^int main(int argc, char *argv[])$/;"	f
main	src/usbevent.c	/^main()$/;"	f
main	test/client.c	/^int main(int argc,char *argv[])$/;"	f
mainWindowQuit	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::mainWindowQuit()$/;"	f	class:FtpClientWindow
main_pthread	src/mainthread.c	/^	void* main_pthread(void* arg) $/;"	f
main_thread_init	src/mainthread.c	/^	int main_thread_init(void)$/;"	f
mainthread	src/mainthread.c	/^	static mainthread_t mainthread;$/;"	v	file:
mainthread_t	src/mainthread.c	/^	}mainthread_t;$/;"	t	typeref:struct:__mainthread	file:
manager	qtsrc/classes/downloadmanager.h	/^    QNetworkAccessManager manager;$/;"	m	class:DownloadManager
manager	qtsrc/widgets/webPage.h	/^		QNetworkAccessManager *manager;$/;"	m	class:Downloadthread
manager	qtsrc/widgets/webPage.h	/^		QNetworkAccessManager *manager[10000];$/;"	m	class:webPage
manager_modulse_init	src/monitorusb.c	/^int manager_modulse_init(void)$/;"	f
manager_pthread	src/monitorusb.c	/^void* manager_pthread(void* arg) $/;"	f
managermod	src/monitorusb.c	/^static managermod_t managermod;$/;"	v	file:
managermod_t	src/monitorusb.c	/^}managermod_t;$/;"	t	typeref:struct:__managermod	file:
managerp	src/amservice.c	/^	void *managerp;$/;"	m	struct:__sockthread	file:
managerp	src/appthread.c	/^	void *managerp;$/;"	m	struct:__appthread	file:
managerp	src/downthread.c	/^	void *managerp;$/;"	m	struct:__downthread	file:
managerp	src/filethread.c	/^	void *managerp;$/;"	m	struct:__filethread	file:
managerp	src/mainthread.c	/^		void *managerp;$/;"	m	struct:__mainthread	file:
managerp	src/monitorusb.c	/^	void *managerp;$/;"	m	struct:__managermod	file:
managerp	src/mutexpthread.c	/^	void *managerp;$/;"	m	struct:__mutexthread	file:
managerp	src/netthread.c	/^	void *managerp;$/;"	m	struct:__netthread	file:
managerp	src/usbpthread.c	/^		void *managerp;$/;"	m	struct:__usbthread	file:
managertest	qtsrc/widgets/webPage.h	/^		QNetworkAccessManager *managertest ;$/;"	m	class:Downloadthread
maximum	qtsrc/classes/textprogressbar.h	/^    qint64 maximum;$/;"	m	class:TextProgressBar
maximum	qtsrc/widgets/webPage.h	/^		qint64 maximum;$/;"	m	class:Downloadthread
maximum	qtsrc/widgets/webPage.h	/^		qint64 maximum;$/;"	m	class:webPage
memoryAvail	inc/typestruct_api.h	/^		char memoryAvail[32];       \/\/ 手机内存剩余容量$/;"	m	struct:__storageinfo
memorySize	inc/typestruct_api.h	/^		char memorySize[32];        \/\/ 手机内存总容量$/;"	m	struct:__storageinfo
message	qtsrc/classes/models/logcatmodel.h	/^    QString message;$/;"	m	class:LogcatMessage
message	qtsrc/classes/textprogressbar.h	/^    QString message;$/;"	m	class:TextProgressBar
mms	qtsrc/managewindow.h	/^	int mms	= 1;$/;"	m	struct:__refreshsign
mms_dialog	qtsrc/managewindow.h	/^		MMS_Dialog *mms_dialog;$/;"	m	class:ManageWindow
mms_info	src/manage.c	/^		char mms_info[200];$/;"	m	struct:__sendmmsinfo	file:
mms_no	src/manage.c	/^		char mms_no[15];$/;"	m	struct:__sendmmsinfo	file:
mmsbody	inc/typestruct_api.h	/^		char mmsbody[1024*2];$/;"	m	struct:__mmsinfo
mmsdata	inc/typestruct_api.h	/^		char mmsdata[1024];$/;"	m	struct:__sendmessage
mmsdata	qtsrc/dialogs/mms_dialog.h	/^		QString mmsdata;$/;"	m	class:MMS_Dialog
mmsdata	qtsrc/managewindow.h	/^		QString mmsdata;$/;"	m	class:ManageWindow
mmsdate	inc/typestruct_api.h	/^		char mmsdate[25];$/;"	m	struct:__mmsinfo
mmsinfo	inc/typestruct.h	/^allmmsinfo_t mmsinfo;$/;"	v
mmsinfo_t	inc/typestruct_api.h	/^	}mmsinfo_t;$/;"	t	typeref:struct:__mmsinfo
mmsname	inc/typestruct_api.h	/^		char mmsname[20];$/;"	m	struct:__mmsinfo
mmsnumber	inc/typestruct_api.h	/^		char mmsnumber[18];$/;"	m	struct:__mmsinfo
mmsnumber	inc/typestruct_api.h	/^		char mmsnumber[18];$/;"	m	struct:__sendmessage
mmsnumber	qtsrc/dialogs/mms_dialog.h	/^		QString mmsnumber;$/;"	m	class:MMS_Dialog
mmsnumber	qtsrc/managewindow.h	/^		QString mmsnumber;$/;"	m	class:ManageWindow
monitor_usb	src/usbpthread.c	/^	int monitor_usb()$/;"	f
mplayerProcess	qtsrc/player.h	/^	QProcess *mplayerProcess;$/;"	m	class:Player
msg	qtsrc/backpthread.cpp	/^int AMEvent::msg() const{$/;"	f	class:AMEvent
msgfd	src/sockserver.h	/^	int msgfd;$/;"	m	struct:__cmr_msglib
msglib_errno_t	src/sockserver.h	/^}msglib_errno_t;$/;"	t	typeref:struct:__msglib_errno
msgliberr_table	src/sockserver.c	/^	msglib_errno_t msgliberr_table[] = {$/;"	v
msglibfd	src/sockserver.c	/^	static cmr_msglib_t msglibfd[MAXSOCKETNO];$/;"	v	file:
music	qtsrc/managewindow.h	/^	int music= 1;$/;"	m	struct:__refreshsign
muteButton	qtsrc/managewindow.h	/^		QPushButton *muteButton;$/;"	m	class:ManageWindow
mutex_pthread	src/mutexpthread.c	/^void* mutex_pthread(void* arg) $/;"	f
mutex_pthread_modules_kill	src/mutexpthread.c	/^void mutex_pthread_modules_kill()$/;"	f
mutex_thread_init	src/mutexpthread.c	/^int mutex_thread_init(void)$/;"	f
mutexmanager	src/amservice.c	/^int mutexmanager()$/;"	f
mutexthread	src/mutexpthread.c	/^static mutexthread_t mutexthread;$/;"	v	file:
mutexthread_t	src/mutexpthread.c	/^}mutexthread_t;$/;"	t	typeref:struct:__mutexthread	file:
mysettingdefault	qtsrc/classes/settings.cpp	/^void Mysetting::mysettingdefault()$/;"	f	class:Mysetting
mysettinginit	qtsrc/classes/settings.cpp	/^void Mysetting::mysettinginit()$/;"	f	class:Mysetting
net_mutex	src/amservice.c	/^static pthread_mutex_t net_mutex;$/;"	v	file:
net_pthread	src/netthread.c	/^void* net_pthread(void* arg) $/;"	f
net_pthread_modules_kill	src/netthread.c	/^void net_pthread_modules_kill()$/;"	f
net_thread_init	src/netthread.c	/^int net_thread_init(void)$/;"	f
netthread	src/netthread.c	/^static netthread_t netthread;$/;"	v	file:
netthread_t	src/netthread.c	/^}netthread_t;$/;"	t	typeref:struct:__netthread	file:
next	qtsrc/managewindow.h	/^		int next = 0;$/;"	m	class:ManageWindow
noScreenshotImage	qtsrc/threads/screenshotthread.cpp	/^QImage noScreenshotImage(int width, int height)$/;"	f
num	src/amservice.c	/^int num=1;$/;"	v
on_Btn_app_clicked	qtsrc/managewindow.cpp	/^void  ManageWindow::on_Btn_app_clicked()$/;"	f	class:ManageWindow
on_Btn_book_clicked	qtsrc/managewindow.cpp	/^void  ManageWindow::on_Btn_book_clicked()$/;"	f	class:ManageWindow
on_Btn_massage_clicked	qtsrc/managewindow.cpp	/^void  ManageWindow::on_Btn_massage_clicked()$/;"	f	class:ManageWindow
on_Btn_music_clicked	qtsrc/managewindow.cpp	/^void  ManageWindow::on_Btn_music_clicked()$/;"	f	class:ManageWindow
on_Btn_video_clicked	qtsrc/managewindow.cpp	/^void  ManageWindow::on_Btn_video_clicked()$/;"	f	class:ManageWindow
on_checkBoxAutoScroll_toggled	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::on_checkBoxAutoScroll_toggled(bool checked)$/;"	f	class:LogcatDialog
on_pushButtonClearLogcat_pressed	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::on_pushButtonClearLogcat_pressed()$/;"	f	class:LogcatDialog
on_spinBoxBufferLimit_editingFinished	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::on_spinBoxBufferLimit_editingFinished()$/;"	f	class:LogcatDialog
opacity	qtsrc/managewindow.h	/^	int opacity = 0;$/;"	m	struct:__settingsargv
openFileButton	qtsrc/managewindow.h	/^		QPushButton *openFileButton;$/;"	m	class:ManageWindow
open_jpsystem_init	src/monitorusb.c	/^static int open_jpsystem_init(void)$/;"	f	file:
operator =	qtsrc/classes/models/logcatmodel.cpp	/^LogcatMessage& LogcatMessage::operator =(const LogcatMessage& logcatMessage)$/;"	f	class:LogcatMessage
output	qtsrc/classes/downloadmanager.h	/^    QFile output;$/;"	m	class:DownloadManager
output	qtsrc/classes/processpthread.h	/^		QString output = NULL;$/;"	m	class:ProcessThread
output	qtsrc/widgets/webPage.h	/^		QFile output;$/;"	m	class:Downloadthread
output	qtsrc/widgets/webPage.h	/^		QFile output;$/;"	m	class:webPage
page	qtsrc/managewindow.h	/^		webPage *page;$/;"	m	class:ManageWindow
pageReload	qtsrc/managewindow.h	/^		QPushButton *pageReload;$/;"	m	class:ManageWindow
pageStop	qtsrc/managewindow.h	/^		QPushButton *pageStop;$/;"	m	class:ManageWindow
paintEvent	qtsrc/widgets/squeezelabel.cpp	/^void SqueezeLabel::paintEvent(QPaintEvent *event)$/;"	f	class:SqueezeLabel
password	qtsrc/classes/settings.h	/^	QString password;$/;"	m	struct:Login
path	qtsrc/widgets/webPage.h	/^		QString path;$/;"	m	class:webPage
percent	qtsrc/managewindow.h	/^			int percent;$/;"	m	struct:ManageWindow::__downloadindex
percent	qtsrc/widgets/webPage.h	/^		int percent;$/;"	m	class:Downloadthread
percent	qtsrc/widgets/webPage.h	/^		int percent;$/;"	m	class:webPage
percent	qtsrc/widgets/webPage.h	/^	int percent;$/;"	m	struct:__downloadindex
pictureFiles	qtsrc/picturelistmodel.h	/^	QStringList pictureFiles;$/;"	m	class:PictureListModel
pid	qtsrc/classes/models/logcatmodel.h	/^    QString pid;$/;"	m	class:LogcatMessage
pixmaps	qtsrc/picturelistmodel.h	/^	QList<QPixmap> pixmaps;$/;"	m	class:PictureListModel
play	qtsrc/player.cpp	/^void Player::play(const QString &fileName)$/;"	f	class:Player
playButton	qtsrc/managewindow.h	/^		QPushButton *playButton;$/;"	m	class:ManageWindow
player	qtsrc/managewindow.h	/^		Player *player;$/;"	m	class:ManageWindow
post_daemon	qtsrc/classes/daemon.cpp	/^void Daemon::post_daemon(int cmd){$/;"	f	class:Daemon
post_daemon	qtsrc/managewindow.cpp	/^void ManageWindow::post_daemon(int cmd){$/;"	f	class:ManageWindow
post_exit	qtsrc/managewindow.cpp	/^void ManageWindow::post_exit(int cmd){$/;"	f	class:ManageWindow
post_insatll	qtsrc/backpthread.cpp	/^void Backthread::post_insatll(int res){$/;"	f	class:Backthread
post_install	qtsrc/managewindow.cpp	/^void ManageWindow::post_install(int cmd){$/;"	f	class:ManageWindow
post_monitorusb	qtsrc/managewindow.cpp	/^void ManageWindow::post_monitorusb(int cmd){$/;"	f	class:ManageWindow
post_refresh	qtsrc/classes/daemon.cpp	/^void Daemon::post_refresh(int cmd){$/;"	f	class:Daemon
post_refresh	qtsrc/managewindow.cpp	/^void ManageWindow::post_refresh(int cmd){$/;"	f	class:ManageWindow
post_sendmms	qtsrc/backpthread.cpp	/^void Backthread::post_sendmms(int res){$/;"	f	class:Backthread
post_sendmms	qtsrc/managewindow.cpp	/^void ManageWindow::post_sendmms(int cmd){$/;"	f	class:ManageWindow
post_softinit	qtsrc/backpthread.cpp	/^void Backthread::post_softinit(int res){$/;"	f	class:Backthread
post_softinit	qtsrc/managewindow.cpp	/^void ManageWindow::post_softinit(int cmd){$/;"	f	class:ManageWindow
post_test	qtsrc/managewindow.cpp	/^void ManageWindow::post_test(int cmd){$/;"	f	class:ManageWindow
post_uninsatll	qtsrc/backpthread.cpp	/^void Backthread::post_uninsatll(int res){$/;"	f	class:Backthread
post_uninstall	qtsrc/managewindow.cpp	/^void ManageWindow::post_uninstall(int cmd){$/;"	f	class:ManageWindow
post_usbevent	qtsrc/backpthread.cpp	/^void Backthread::post_usbevent(int res){$/;"	f	class:Backthread
proces	qtsrc/dialogs/logcatdialog.h	/^    QProcess *proces;$/;"	m	class:LogcatDialog
process	qtsrc/widgets/shellwidget.h	/^    QProcess process;$/;"	m	class:ShellWidget
processPath	qtsrc/widgets/shellwidget.h	/^    QString processPath;$/;"	m	class:ShellWidget
progressBar	qtsrc/classes/downloadmanager.h	/^    TextProgressBar progressBar;$/;"	m	class:DownloadManager
progressDlg	qtsrc/widgets/ftpclient.h	/^    QProgressDialog *progressDlg;$/;"	m	class:Ftpclient
rcvlen	src/usbpthread.c	/^	int skfd, rcvlen, ret;$/;"	v
read	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::read()$/;"	f	class:LogcatDialog
readFromProcess	qtsrc/widgets/shellwidget.cpp	/^void ShellWidget::readFromProcess()$/;"	f	class:ShellWidget
read_shfile	src/sh_module.c	/^int read_shfile(char *argv,char *readbuf,int readlen)$/;"	f
recmessage	src/sampleclient.c	/^void recmessage(void){$/;"	f
recthread	src/sampleclient.c	/^pthread_t recthread;$/;"	v
recv_buf	src/amservice.c	/^char recv_buf = 0;$/;"	v
recv_daemon	qtsrc/managewindow.cpp	/^void ManageWindow::recv_daemon(int cmd){$/;"	f	class:ManageWindow
recv_daemoninit	qtsrc/classes/daemon.cpp	/^void Daemon:: recv_daemoninit()$/;"	f	class:Daemon
recv_exit	qtsrc/backpthread.cpp	/^void Backthread::recv_exit(int cmd)$/;"	f	class:Backthread
recv_install	qtsrc/backpthread.cpp	/^void Backthread::recv_install(int cmd)$/;"	f	class:Backthread
recv_install	qtsrc/managewindow.cpp	/^void ManageWindow::recv_install(int res)$/;"	f	class:ManageWindow
recv_leng	src/amservice.c	/^int recv_leng = 0;$/;"	v
recv_monitorusb	qtsrc/managewindow.cpp	/^void ManageWindow::recv_monitorusb(int res){$/;"	f	class:ManageWindow
recv_pack	src/amservice.c	/^recv_pack()$/;"	f
recv_refresh	qtsrc/backpthread.cpp	/^void Backthread::recv_refresh(int cmd)$/;"	f	class:Backthread
recv_refresh	qtsrc/managewindow.cpp	/^void ManageWindow::recv_refresh(int res)$/;"	f	class:ManageWindow
recv_sendmms	qtsrc/backpthread.cpp	/^void Backthread::recv_sendmms(int cmd)$/;"	f	class:Backthread
recv_sendmms	qtsrc/managewindow.cpp	/^void ManageWindow::recv_sendmms(int res)$/;"	f	class:ManageWindow
recv_softinit	qtsrc/backpthread.cpp	/^void Backthread::recv_softinit(int cmd)$/;"	f	class:Backthread
recv_softinit	qtsrc/managewindow.cpp	/^void ManageWindow::recv_softinit(int res)$/;"	f	class:ManageWindow
recv_test	qtsrc/managewindow.cpp	/^void ManageWindow::recv_test(int res){$/;"	f	class:ManageWindow
recv_uirefresh	qtsrc/classes/daemon.cpp	/^void Daemon::recv_uirefresh(int cmd)$/;"	f	class:Daemon
recv_uninstall	qtsrc/backpthread.cpp	/^void Backthread::recv_uninstall(int cmd)$/;"	f	class:Backthread
recv_uninstall	qtsrc/managewindow.cpp	/^void ManageWindow::recv_uninstall(int res)$/;"	f	class:ManageWindow
recv_usbevent	qtsrc/backpthread.cpp	/^void Backthread::recv_usbevent(int cmd){$/;"	f	class:Backthread
recvmsg	src/sockserver.h	/^	long recvmsg[PACKET_LENG];$/;"	m	struct:dtmsg
recvmsgleng	src/sockserver.h	/^	int recvmsgleng;	$/;"	m	struct:dtmsg
refresh_anim	qtsrc/managewindow.h	/^		Animation *refresh_anim;$/;"	m	class:ManageWindow
refreshdowninfo	qtsrc/widgets/downlist.cpp	/^void Downloadlist::refreshdowninfo(int downcount,double speed,int percent,int stat,QString filename)$/;"	f	class:Downloadlist
refreshinfo	src/amservice.c	/^int refreshinfo()$/;"	f
refreshsign	qtsrc/managewindow.h	/^		refreshsign_t refreshsign;$/;"	m	class:ManageWindow
refreshsign_t	qtsrc/managewindow.h	/^}refreshsign_t;$/;"	t	typeref:struct:__refreshsign
regExp	qtsrc/classes/models/logcatmodel.h	/^    QList<QRegExp> regExp;$/;"	m	class:SortFilterProxyModel
reget	src/amservice.c	/^sem_t reget[10]; $/;"	v
regetinfo	src/amservice.c	/^int regetinfo(int argc)$/;"	f
reject	qtsrc/managewindow.cpp	/^void ManageWindow::reject()$/;"	f	class:ManageWindow
removeRows	qtsrc/classes/models/logcatmodel.cpp	/^bool LogcatModel::removeRows(int position, int rows, const QModelIndex &index)$/;"	f	class:LogcatModel
removeRows	qtsrc/picturelistmodel.cpp	/^bool PictureListModel::removeRows(int row, int count, const QModelIndex &parent)$/;"	f	class:PictureListModel
renderTarget	qtsrc/player.h	/^	QWidget *renderTarget;$/;"	m	class:Player
requesttest	qtsrc/widgets/webPage.h	/^		QNetworkRequest *requesttest;$/;"	m	class:Downloadthread
resizeEvent	qtsrc/player.cpp	/^void Player::resizeEvent(QResizeEvent * event)$/;"	f	class:Player
ret	qtsrc/amevent.h	/^	int ret;$/;"	m	class:AMEvent
ret	src/amservice.c	/^int ret;$/;"	v
ret	src/usbpthread.c	/^	int skfd, rcvlen, ret;$/;"	v
return_usb	src/usbpthread.c	/^	int return_usb = KONG_USB;$/;"	v
rgb565toQImage	qtsrc/threads/screenshotthread.cpp	/^QImage rgb565toQImage(QByteArray data, unsigned int bytesPerPixel, unsigned int width,$/;"	f
rowCount	qtsrc/classes/models/logcatmodel.cpp	/^int LogcatModel::rowCount()$/;"	f	class:LogcatModel
rowCount	qtsrc/classes/models/logcatmodel.cpp	/^int LogcatModel::rowCount(const QModelIndex &parent) const$/;"	f	class:LogcatModel
rowCount	qtsrc/picturelistmodel.cpp	/^int PictureListModel::rowCount(const QModelIndex &parent) const$/;"	f	class:PictureListModel
run	qtsrc/classes/downloadpthread.cpp	/^void DownloadThread::run()$/;"	f	class:DownloadThread
run	qtsrc/classes/processpthread.cpp	/^void ProcessThread::run()$/;"	f	class:ProcessThread
run	qtsrc/connectionthread.cpp	/^void ConnectThread::run()$/;"	f	class:ConnectThread
run	qtsrc/threads/screenshotthread.cpp	/^void ThreadScreenshot::run()$/;"	f	class:ThreadScreenshot
run	qtsrc/widgets/webPage.cpp	/^void Downloadthread::run()$/;"	f	class:Downloadthread
s_addr	src/sockserver.h	/^	struct sockaddr_in s_addr;$/;"	m	struct:dtmsg	typeref:struct:dtmsg::sockaddr_in
s_addrsize	src/sockserver.h	/^	socklen_t s_addrsize;$/;"	m	struct:dtmsg
s_devices	src/manage.c	/^	deviceslist_t  s_devices;$/;"	v
sampleclient	src/sampleclient.c	/^int sampleclient(){$/;"	f
saveFileName	qtsrc/classes/downloadmanager.cpp	/^QString DownloadManager::saveFileName(const QUrl &url)$/;"	f	class:DownloadManager
saveFileName	qtsrc/widgets/webPage.cpp	/^QString Downloadthread::saveFileName(const QUrl &url)$/;"	f	class:Downloadthread
saveFileName	qtsrc/widgets/webPage.cpp	/^QString webPage::saveFileName(const QUrl &url)$/;"	f	class:webPage
screenshot	qtsrc/managewindow.h	/^		ScreenshotWidget *screenshot;$/;"	m	class:ManageWindow
screenshot	qtsrc/widgets/screenshotwidget.h	/^	QPixmap screenshot;$/;"	m	class:ScreenshotWidget
sdAvail	inc/typestruct_api.h	/^		char sdAvail[32];           \/\/ SD卡剩余容量$/;"	m	struct:__storageinfo
sdSize	inc/typestruct_api.h	/^		char sdSize[32];            \/\/ SD卡总容量$/;"	m	struct:__storageinfo
sddata	src/amservice.c	/^int sddata[1024];$/;"	v
sdk	qtsrc/dialogs/logcatdialog.h	/^    QString sdk;$/;"	m	class:LogcatDialog
sdk	qtsrc/widgets/shellwidget.h	/^    QString sdk;$/;"	m	class:ShellWidget
seminit	src/amservice.c	/^void seminit()$/;"	f
send_num	src/amservice.c	/^char send_num = 4;$/;"	v
send_pack	src/amservice.c	/^send_pack()$/;"	f
send_pthread	src/amservice.c	/^void* send_pthread(void* arg) $/;"	f
send_pthread_init	src/amservice.c	/^int send_pthread_init()$/;"	f
sender	qtsrc/classes/models/logcatmodel.h	/^    QString sender;$/;"	m	class:LogcatMessage
sendmessage	inc/typestruct.h	/^sendmessage_t sendmessage;$/;"	v
sendmessage_t	inc/typestruct_api.h	/^	}sendmessage_t;$/;"	t	typeref:struct:__sendmessage
sendmmsinfo	src/manage.c	/^	sendmmsinfo_t sendmmsinfo;$/;"	v
sendmmsinfo_t	src/manage.c	/^	}sendmmsinfo_t;$/;"	t	typeref:struct:__sendmmsinfo	file:
sendmsg	src/sockserver.h	/^	long sendmsg[PACKET_LENG];$/;"	m	struct:dtmsg
sendmsgleng	src/sockserver.h	/^	int sendmsgleng;	$/;"	m	struct:dtmsg
sendthread	src/amservice.c	/^static sockthread_t sendthread;$/;"	v	file:
serialNumber	qtsrc/classes/daemon.h	/^		QString serialNumber;$/;"	m	class:Daemon
setCurrentPath	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::setCurrentPath(QString &path)$/;"	f	class:Ftpclient
setData	qtsrc/classes/models/logcatmodel.cpp	/^bool LogcatModel::setData(const QModelIndex &index, const QVariant &value, int role)$/;"	f	class:LogcatModel
setIcon	qtsrc/managewindow.cpp	/^void ManageWindow::setIcon()$/;"	f	class:ManageWindow
setMessage	qtsrc/classes/textprogressbar.cpp	/^void TextProgressBar::setMessage(const QString &m)$/;"	f	class:TextProgressBar
setPathType	qtsrc/animation.h	/^    void setPathType(PathType pathType)$/;"	f	class:Animation
setPwd	qtsrc/widgets/ftpclient.h	/^    void setPwd(const QString &pwd) { strPwd = pwd; }$/;"	f	class:Ftpclient
setServerName	qtsrc/widgets/ftpclient.h	/^    void setServerName(const QString &server) { strSrvName = server; }$/;"	f	class:Ftpclient
setServerPort	qtsrc/widgets/ftpclient.h	/^    void setServerPort(const QString &port) { strSrvPort = port; }$/;"	f	class:Ftpclient
setStatus	qtsrc/classes/textprogressbar.cpp	/^void TextProgressBar::setStatus(qint64 val, qint64 max)$/;"	f	class:TextProgressBar
setUserName	qtsrc/widgets/ftpclient.h	/^    void setUserName(const QString &userName) { strUser = userName; }$/;"	f	class:Ftpclient
setcallphone	src/amservice.c	/^void setcallphone(char *phonenumber)$/;"	f
setdaownloadpath	qtsrc/classes/settings.cpp	/^void Mysetting::setdaownloadpath(char *)$/;"	f	class:Mysetting
setinstallapp	src/manage.c	/^	void setinstallapp(char *apppath)$/;"	f
setmessageinfo	src/amservice.c	/^void setmessageinfo(char *char_mmsnumber,char *char_mmsdata)$/;"	f
setnumber	qtsrc/dialogs/mms_dialog.cpp	/^void MMS_Dialog::setnumber(QString number)$/;"	f	class:MMS_Dialog
setsendmmsinfo	src/manage.c	/^	void setsendmmsinfo(char *qtmms_no, char *qtmms_info)$/;"	f
settings	qtsrc/classes/settings.h	/^		QSettings  settings;$/;"	m	class:Mysetting
settings	qtsrc/managewindow.h	/^		QSettings * settings;$/;"	m	class:ManageWindow
settingsargv	qtsrc/managewindow.h	/^		settingsargv_t settingsargv;$/;"	m	class:ManageWindow
settingsargv_t	qtsrc/managewindow.h	/^}settingsargv_t;$/;"	t	typeref:struct:__settingsargv
setui_appclass	qtsrc/managewindow.cpp	/^void ManageWindow::setui_appclass(int Appclass)     $/;"	f	class:ManageWindow
setui_appinfo	qtsrc/managewindow.cpp	/^void ManageWindow::setui_appinfo()$/;"	f	class:ManageWindow
setui_bookinfo	qtsrc/managewindow.cpp	/^void ManageWindow::setui_bookinfo()$/;"	f	class:ManageWindow
setui_clean	qtsrc/managewindow.cpp	/^void ManageWindow::setui_clean()$/;"	f	class:ManageWindow
setui_downloadlist	qtsrc/managewindow.cpp	/^void ManageWindow::setui_downloadlist(int row)$/;"	f	class:ManageWindow
setui_mmsinfo	qtsrc/managewindow.cpp	/^void ManageWindow::setui_mmsinfo()$/;"	f	class:ManageWindow
setui_storageinfo	qtsrc/managewindow.cpp	/^void ManageWindow::setui_storageinfo()$/;"	f	class:ManageWindow
sfd	src/sockserver.h	/^	int sfd;$/;"	m	struct:dtmsg
sh_module	src/sh_module.c	/^int sh_module(int adbcmd,char *argv)$/;"	f
shcmd	src/manage.c	/^	char shcmd[MAXLEN] = {0};$/;"	v
shellWidget	qtsrc/dialogs/shelldialog.h	/^	ShellWidget *shellWidget;$/;"	m	class:ShellDialog
shelldialog	qtsrc/managewindow.h	/^		ShellDialog *shelldialog;$/;"	m	class:ManageWindow
showContextMenu	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::showContextMenu(QPoint point)$/;"	f	class:LogcatDialog
showPicture	qtsrc/managewindow.cpp	/^void ManageWindow::showPicture(const QModelIndex &index)$/;"	f	class:ManageWindow
showScreenshot	qtsrc/widgets/screenshotwidget.cpp	/^void ScreenshotWidget::showScreenshot(QImage image, int width, int height)$/;"	f	class:ScreenshotWidget
showTitle	qtsrc/managewindow.cpp	/^void ManageWindow::showTitle(const QString &title)$/;"	f	class:ManageWindow
skfd	src/usbpthread.c	/^	int skfd, rcvlen, ret;$/;"	v
skin	qtsrc/managewindow.h	/^	int skin = 1;$/;"	m	struct:__settingsargv
slotAboutApplication	qtsrc/managewindow.cpp	/^void ManageWindow::slotAboutApplication()$/;"	f	class:ManageWindow
slotBackMessage	qtsrc/managewindow.cpp	/^void ManageWindow::slotBackMessage()$/;"	f	class:ManageWindow
slotBackward	qtsrc/managewindow.cpp	/^void ManageWindow::slotBackward()$/;"	f	class:ManageWindow
slotConnectionChanged	qtsrc/classes/daemon.cpp	/^void Daemon::slotConnectionChanged(int state,QString serialNumber)$/;"	f	class:Daemon
slotError	qtsrc/managewindow.cpp	/^void ManageWindow::slotError(QProcess::ProcessError \/*error*\/)$/;"	f	class:ManageWindow
slotFinished	qtsrc/managewindow.cpp	/^void ManageWindow::slotFinished(int \/*exitCode*\/, QProcess::ExitStatus \/*exitStatus*\/)$/;"	f	class:ManageWindow
slotMute	qtsrc/managewindow.cpp	/^void ManageWindow::slotMute(bool \/*status*\/)$/;"	f	class:ManageWindow
slotOpenFile	qtsrc/managewindow.cpp	/^void ManageWindow::slotOpenFile()$/;"	f	class:ManageWindow
slotPlay	qtsrc/managewindow.cpp	/^void ManageWindow::slotPlay()$/;"	f	class:ManageWindow
slotStarted	qtsrc/managewindow.cpp	/^void ManageWindow::slotStarted()$/;"	f	class:ManageWindow
slotStep	qtsrc/managewindow.cpp	/^void ManageWindow::slotStep()$/;"	f	class:ManageWindow
slotStop	qtsrc/managewindow.cpp	/^void ManageWindow::slotStop()$/;"	f	class:ManageWindow
slotStyleChange	qtsrc/managewindow.cpp	/^void ManageWindow::slotStyleChange(int StyleString)     \/\/透明度$/;"	f	class:ManageWindow
slotTrans	qtsrc/managewindow.cpp	/^void ManageWindow::slotTrans(int value)     \/\/透明度$/;"	f	class:ManageWindow
slotappclasschange	qtsrc/managewindow.cpp	/^void ManageWindow::slotappclasschange(int Appclass)     $/;"	f	class:ManageWindow
socket	qtsrc/connectionthread.h	/^    QTcpSocket *socket;$/;"	m	class:ConnectThread
socket	qtsrc/threads/screenshotthread.h	/^    QTcpSocket *socket;$/;"	m	class:ThreadScreenshot
sockfd	src/amservice.c	/^int sockfd;$/;"	v
sockfd	src/sampleclient.c	/^int sockfd;$/;"	v
sockthread_t	src/amservice.c	/^}sockthread_t;$/;"	t	typeref:struct:__sockthread	file:
speed	qtsrc/managewindow.h	/^			double speed;$/;"	m	struct:ManageWindow::__downloadindex
speed	qtsrc/widgets/webPage.h	/^		double speed;$/;"	m	class:Downloadthread
speed	qtsrc/widgets/webPage.h	/^		double speed;$/;"	m	class:webPage
speed	qtsrc/widgets/webPage.h	/^	double speed;$/;"	m	struct:__downloadindex
startLogcat	qtsrc/dialogs/logcatdialog.cpp	/^void LogcatDialog::startLogcat()$/;"	f	class:LogcatDialog
startNextDownload	qtsrc/classes/downloadmanager.cpp	/^void DownloadManager::startNextDownload()$/;"	f	class:DownloadManager
startNextDownload	qtsrc/widgets/webPage.cpp	/^void Downloadthread::startNextDownload(QUrl url)$/;"	f	class:Downloadthread
startNextDownload	qtsrc/widgets/webPage.cpp	/^void webPage::startNextDownload(QUrl url)$/;"	f	class:webPage
stat	qtsrc/managewindow.h	/^			int stat;$/;"	m	struct:ManageWindow::__downloadindex
stat	qtsrc/widgets/webPage.h	/^		int stat;$/;"	m	class:Downloadthread
stat	qtsrc/widgets/webPage.h	/^		int stat;$/;"	m	class:webPage
stat	qtsrc/widgets/webPage.h	/^	int stat;$/;"	m	struct:__downloadindex
status	qtsrc/classes/daemon.h	/^	int status;$/;"	m	struct:tag_timerdata
stepButton	qtsrc/managewindow.h	/^		QPushButton *stepButton;$/;"	m	class:ManageWindow
stopButton	qtsrc/managewindow.h	/^		QPushButton *stopButton;$/;"	m	class:ManageWindow
storageinfo	inc/typestruct.h	/^storageinfo_t storageinfo;$/;"	v
storageinfo_t	inc/typestruct_api.h	/^	}storageinfo_t;$/;"	t	typeref:struct:__storageinfo
strPwd	qtsrc/widgets/ftpclient.h	/^    QString strSrvName, strSrvPort, strUser, strPwd;$/;"	m	class:Ftpclient
strSrvName	qtsrc/widgets/ftpclient.h	/^    QString strSrvName, strSrvPort, strUser, strPwd;$/;"	m	class:Ftpclient
strSrvPort	qtsrc/widgets/ftpclient.h	/^    QString strSrvName, strSrvPort, strUser, strPwd;$/;"	m	class:Ftpclient
strUser	qtsrc/widgets/ftpclient.h	/^    QString strSrvName, strSrvPort, strUser, strPwd;$/;"	m	class:Ftpclient
styleSheet	qtsrc/dialogs/logcatdialog.h	/^	QString styleSheet;$/;"	m	class:LogcatDialog
styleSheet	qtsrc/managewindow.h	/^		QString styleSheet;$/;"	m	class:ManageWindow
switchDownloadBtn	qtsrc/widgets/ftpclientwindow.cpp	/^void FtpClientWindow::switchDownloadBtn(QListWidgetItem *item)$/;"	f	class:FtpClientWindow
system_exit	src/manage.c	/^	void system_exit()$/;"	f
tag_timerdata	qtsrc/classes/daemon.h	/^typedef struct tag_timerdata{$/;"	s
takeScreenshot	qtsrc/widgets/screenshotwidget.cpp	/^void ScreenshotWidget::takeScreenshot()$/;"	f	class:ScreenshotWidget
tattr	src/amservice.c	/^	pthread_attr_t tattr;$/;"	m	struct:__sockthread	file:
tattr	src/appthread.c	/^	pthread_attr_t tattr;$/;"	m	struct:__appthread	file:
tattr	src/downthread.c	/^	pthread_attr_t tattr;$/;"	m	struct:__downthread	file:
tattr	src/filethread.c	/^	pthread_attr_t tattr;$/;"	m	struct:__filethread	file:
tattr	src/mainthread.c	/^		pthread_attr_t tattr;$/;"	m	struct:__mainthread	file:
tattr	src/monitorusb.c	/^	pthread_attr_t tattr;$/;"	m	struct:__managermod	file:
tattr	src/mutexpthread.c	/^	pthread_attr_t tattr;$/;"	m	struct:__mutexthread	file:
tattr	src/netthread.c	/^	pthread_attr_t tattr;$/;"	m	struct:__netthread	file:
tattr	src/usbpthread.c	/^		pthread_attr_t tattr;$/;"	m	struct:__usbthread	file:
testapp	qtsrc/managewindow.h	/^		int testapp;$/;"	m	class:ManageWindow
threadScreenshot	qtsrc/widgets/screenshotwidget.h	/^    ThreadScreenshot threadScreenshot;$/;"	m	class:ScreenshotWidget
thread_net_link	src/usbevent.c	/^int thread_net_link()$/;"	f
tid	src/amservice.c	/^	pthread_t tid;$/;"	m	struct:__sockthread	file:
tid	src/appthread.c	/^	pthread_t tid;$/;"	m	struct:__appthread	file:
tid	src/downthread.c	/^	pthread_t tid;$/;"	m	struct:__downthread	file:
tid	src/filethread.c	/^	pthread_t tid;$/;"	m	struct:__filethread	file:
tid	src/mainthread.c	/^		pthread_t tid;$/;"	m	struct:__mainthread	file:
tid	src/monitorusb.c	/^	pthread_t tid;$/;"	m	struct:__managermod	file:
tid	src/mutexpthread.c	/^	pthread_t tid;$/;"	m	struct:__mutexthread	file:
tid	src/netthread.c	/^	pthread_t tid;$/;"	m	struct:__netthread	file:
tid	src/usbpthread.c	/^		pthread_t tid;$/;"	m	struct:__usbthread	file:
time	qtsrc/classes/daemon.h	/^	char time[16];$/;"	m	struct:tag_timerdata
timelast	src/monitorusb.c	/^static struct timeval timelast = {-1, -1};$/;"	v	typeref:struct:timeval	file:
timercount	qtsrc/classes/daemon.h	/^		unsigned int timercount;$/;"	m	class:Daemon
timerdata	qtsrc/classes/daemon.h	/^		timerdata_t timerdata;$/;"	m	class:Daemon
timerdata_t	qtsrc/classes/daemon.h	/^}timerdata_t;$/;"	t	typeref:struct:tag_timerdata
timeremain	src/monitorusb.c	/^static int timeremain;$/;"	v	file:
timestamp	qtsrc/classes/models/logcatmodel.h	/^    QString timestamp;$/;"	m	class:LogcatMessage
tmpclean	src/manage.c	/^	void tmpclean()$/;"	f
tmpreturn	src/amservice.c	/^int tmpreturn = 0;$/;"	v
toinstallapp	src/manage.c	/^	int toinstallapp()$/;"	f
tosendmms	src/manage.c	/^	int tosendmms()$/;"	f
tosize	src/amservice.c	/^char tosize[4] = {0};$/;"	v
totalCount	qtsrc/classes/downloadmanager.h	/^    int totalCount;$/;"	m	class:DownloadManager
tout	src/amservice.c	/^struct timeval tout;$/;"	v	typeref:struct:timeval
tv	src/usbpthread.c	/^	struct timeval tv;$/;"	v	typeref:struct:timeval
type	qtsrc/classes/models/logcatmodel.h	/^    QString type;$/;"	m	class:LogcatMessage
typeId	inc/typestruct_api.h	/^		char typeId; $/;"	m	struct:__mmsinfo
ui	qtsrc/dialogs/mms_dialog.h	/^		Ui::MMS_Dialog *ui;$/;"	m	class:MMS_Dialog
ui	qtsrc/dialogs/shelldialog.h	/^    Ui::ShellDialog *ui;$/;"	m	class:ShellDialog
ui	qtsrc/managewindow.h	/^		Ui::ManageWindow *ui;$/;"	m	class:ManageWindow
ui	qtsrc/player.h	/^	ManageWindow *ui;$/;"	m	class:Player
ui	qtsrc/widgets/downlist.h	/^    Ui::UiDownlist *ui;$/;"	m	class:Downloadlist
ui	qtsrc/widgets/ftpclientwindow.h	/^    Ui::FtpClientWindow *ui;$/;"	m	class:FtpClientWindow
ui	qtsrc/widgets/screenshotwidget.h	/^    Ui::ScreenshotWidget *ui;$/;"	m	class:ScreenshotWidget
uiappinfo	qtsrc/managewindow.h	/^		allappinfo_t uiappinfo;$/;"	m	class:ManageWindow
uibookinfo	qtsrc/managewindow.h	/^		allbookinfo_t uibookinfo;$/;"	m	class:ManageWindow
uimmsinfo	qtsrc/managewindow.h	/^		allmmsinfo_t uimmsinfo;$/;"	m	class:ManageWindow
uistorageinfo	qtsrc/managewindow.h	/^		storageinfo_t uistorageinfo;$/;"	m	class:ManageWindow
update	qtsrc/classes/textprogressbar.cpp	/^void TextProgressBar::update()$/;"	f	class:TextProgressBar
updateCurrentTime	qtsrc/animation.h	/^    void updateCurrentTime(int currentTime)$/;"	f	class:Animation
updateProgressBar	qtsrc/widgets/ftpclient.cpp	/^void Ftpclient::updateProgressBar(int done, int total)$/;"	f	class:Ftpclient
url	qtsrc/classes/downloadpthread.h	/^		QString url = "";$/;"	m	class:DownloadThread
url	qtsrc/widgets/ftpclient.h	/^    QUrl url;$/;"	m	class:Ftpclient
urlAddr	qtsrc/managewindow.h	/^		QLineEdit *urlAddr;$/;"	m	class:ManageWindow
urlmanager	qtsrc/classes/downloadpthread.h	/^		DownloadManager *urlmanager;$/;"	m	class:DownloadThread
usb_event	src/usbpthread.c	/^	int usb_event()$/;"	f
usb_pthread	src/usbpthread.c	/^	void* usb_pthread(void* arg) $/;"	f
usb_sock	src/usbpthread.c	/^	int usb_sock()$/;"	f
usb_thread_init	src/usbpthread.c	/^	int usb_thread_init(void)$/;"	f
usbthread	src/usbpthread.c	/^	static usbthread_t usbthread;$/;"	v	file:
usbthread_t	src/usbpthread.c	/^	}usbthread_t;$/;"	t	typeref:struct:__usbthread	file:
userName	qtsrc/classes/settings.h	/^	QString userName;$/;"	m	struct:Login
value	qtsrc/classes/textprogressbar.h	/^    qint64 value;$/;"	m	class:TextProgressBar
value	qtsrc/widgets/webPage.h	/^		qint64 value;$/;"	m	class:Downloadthread
value	qtsrc/widgets/webPage.h	/^		qint64 value;$/;"	m	class:webPage
valuechange	qtsrc/managewindow.cpp	/^void ManageWindow::valuechange(int value)$/;"	f	class:ManageWindow
video	qtsrc/managewindow.h	/^	int video= 1;$/;"	m	struct:__refreshsign
video_player	qtsrc/managewindow.cpp	/^void ManageWindow::video_player()$/;"	f	class:ManageWindow
waitdata	src/amservice.c	/^int waitdata()$/;"	f
webPage	qtsrc/widgets/webPage.cpp	/^webPage::webPage(QObject *parent) :$/;"	f	class:webPage
webPage	qtsrc/widgets/webPage.h	/^class webPage : public QWebPage$/;"	c
widthScreen	qtsrc/threads/screenshotthread.h	/^    int widthScreen, heightScreen;$/;"	m	class:ThreadScreenshot
~AMEvent	qtsrc/backpthread.cpp	/^AMEvent::~AMEvent(){$/;"	f	class:AMEvent
~Backthread	qtsrc/backpthread.cpp	/^Backthread::~Backthread(){$/;"	f	class:Backthread
~Daemon	qtsrc/classes/daemon.cpp	/^Daemon::~Daemon(){$/;"	f	class:Daemon
~Downloadlist	qtsrc/widgets/downlist.cpp	/^Downloadlist::~Downloadlist()$/;"	f	class:Downloadlist
~FtpClientWindow	qtsrc/widgets/ftpclientwindow.cpp	/^FtpClientWindow::~FtpClientWindow()$/;"	f	class:FtpClientWindow
~Ftpclient	qtsrc/widgets/ftpclient.cpp	/^Ftpclient::~Ftpclient()$/;"	f	class:Ftpclient
~LogcatDialog	qtsrc/dialogs/logcatdialog.cpp	/^LogcatDialog::~LogcatDialog()$/;"	f	class:LogcatDialog
~MMS_Dialog	qtsrc/dialogs/mms_dialog.cpp	/^MMS_Dialog::~MMS_Dialog()$/;"	f	class:MMS_Dialog
~ManageWindow	qtsrc/managewindow.cpp	/^ManageWindow::~ManageWindow()$/;"	f	class:ManageWindow
~Mysetting	qtsrc/classes/settings.cpp	/^Mysetting::~Mysetting(){$/;"	f	class:Mysetting
~Player	qtsrc/player.cpp	/^Player::~Player()$/;"	f	class:Player
~ScreenshotWidget	qtsrc/widgets/screenshotwidget.cpp	/^ScreenshotWidget::~ScreenshotWidget()$/;"	f	class:ScreenshotWidget
~ShellDialog	qtsrc/dialogs/shelldialog.cpp	/^ShellDialog::~ShellDialog()$/;"	f	class:ShellDialog
~ShellWidget	qtsrc/widgets/shellwidget.cpp	/^ShellWidget::~ShellWidget()$/;"	f	class:ShellWidget
